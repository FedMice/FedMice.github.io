{"version":3,"sources":["./src/app/pages/voila2sample-ms-demo-fe/ordine/ordine.constant.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/tabs-ordine/riga-ordine/tab-riga-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/tabs-ordine/riga-ordine/tab-riga-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-group-api.service.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/detail-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/detail-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-routing.module.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/ordine.model.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/list-ordine/list-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/list-ordine/list-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/tabs-ordine/ordine-figli/tab-ordine-figli.component.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/tabs-ordine/ordine-figli/tab-ordine-figli.component.html","./src/app/pages/voila2sample-ms-demo-fe/ordine/ordine.module.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/tabs-ordine/tabs-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/detail-ordine/tabs-ordine/tabs-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/ordine/list-ordine/search-ordine/search-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/list-ordine/search-ordine/search-ordine.component.html"],"names":[],"mappings":"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","file":"ordine-ordine-module.js","sourcesContent":["\r\nexport const ordine_ = {\r\n    detail : {\r\n         toast: {\r\n             SUCCESS_INSERT: 'Ordine aggiunto con successo',\r\n             SUCCESS_DELETE: 'Ordine eliminato con successo',\r\n             SUCCESS_UPDATE: 'Ordine aggiornato con successo'\r\n         },\r\n         relLink: {\r\n    \tTHE_RIGA_ORDINE: 'theRigaOrdine',\r\n    \tTHE_ORDINE_FIGLI: 'theOrdineFigli',\r\n        },\r\n        dialog: {\r\n            DELETE_MESSAGE: \"Sei sicuro di voler cancellare ordine ?\"\r\n        },\r\n        path: {\r\n            LIST: '/pages/ms-demo/ordine/list-ordine'\r\n        }\r\n    },\r\n    \r\n}\r\n\r\n \r\n","\r\nimport { Component, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BzDialogService, PageObject } from 'blazing';\r\nimport { RigaOrdineApiService } from 'src/app/pages/voila2sample-ms-demo-fe/riga-ordine/riga-ordine-api.service';\r\nimport { rigaOrdineForm } from 'src/app/pages/voila2sample-ms-demo-fe/riga-ordine/riga-ordine-form';\r\nimport { IRigaOrdine } from 'src/app/pages/voila2sample-ms-demo-fe/riga-ordine/riga-ordine.interface';\r\nimport { DialogListProdottoComponent } from 'src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-prodotto/dialog-list-prodotto.component';\r\nimport { BaseTabComponent } from 'src/app/shared/base/base-tab.component';\r\nimport { fillOptions } from 'src/app/shared/base/base.helper';\r\nimport { extractResponse, extractTotalPages, setControl } from 'voila2-runtime-ng';\r\nimport { IOrdine } from '../../../ordine.interface';\r\n\r\n@Component({\r\n  selector: 'app-tab-riga-ordine',\r\n  templateUrl: './tab-riga-ordine.component.html',\r\n  styleUrls: ['./tab-riga-ordine.component.scss'],\r\n  providers: [RigaOrdineApiService]\r\n})\r\nexport class TabRigaOrdineComponent extends BaseTabComponent<IOrdine> implements OnChanges {\r\n\r\n\r\n  public theRigaOrdine !: FormArray;\r\n  public theRigaOrdineList !: AbstractControl[];\r\n  public rigaOrdineList: IRigaOrdine[] = []\r\n  public form: FormGroup = rigaOrdineForm(this.formBuilder);\r\n  public smartFormGroup: FormGroup = this.formBuilder.group({});\r\n\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private rigaOrdineApiService: \r\n     RigaOrdineApiService,\r\n    private dialogService: BzDialogService\r\n  ) { super() }\r\n\r\n\r\n\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    this.manageEntityChanges(changes);\r\n    this.managePageStatusChanges(changes);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Paginate table.\r\n   * \r\n   */\r\n  public paginateTable(object: any): void {\r\n    let options = fillOptions(this.pageStatus, object);\r\n    if (this.theEntitylink) {\r\n      this.rigaOrdineApiService.getListRigaOrdineByLink(this.theEntitylink, options).subscribe(\r\n        (data: any) => {\r\n          this.rigaOrdineList = extractResponse('rigaOrdine', data);\r\n          this.totalPages = extractTotalPages(data);\r\n          this.spinner = false;\r\n        },\r\n        () => {\r\n          this.spinner = false;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  public getSmartArray(smartArray: any): void {\r\n    if (this.smartFormGroup.valid || this.smartFormGroup.status === \"DISABLED\") {\r\n      setControl(this.formGroup,'theRigaOrdine', smartArray);\r\n    }\r\n  }\r\n\r\n\r\n  public showProdottoListDialog(index: number): void {\r\n    this.dialogService.showDialog(DialogListProdottoComponent).subscribe(\r\n      (data) => {\r\n        if (data) {\r\n\t\t  \r\n          this.setSmartControlByIndex(this.smartFormGroup, index, data, 'objectKey', 'rigaOrdineKey.theProdottoObjectKey');\r\n          \r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  private managePageStatusChanges(changes: SimpleChanges): void {\r\n    const pageStatusChanges: SimpleChange = changes.pageStatus;\r\n    if (pageStatusChanges?.currentValue) {\r\n      this.rigaOrdineList = [];\r\n      const object: PageObject = this.managePageStatus(pageStatusChanges, this.smartFormGroup);\r\n      this.paginateTable(object);\r\n    }\r\n  }\r\n\r\n  private manageEntityChanges(changes: SimpleChanges): void {\r\n    const entityChanges: SimpleChange = changes.entity;\r\n    if (entityChanges) {\r\n      this.entity = entityChanges.currentValue;\r\n      setControl(this.form,'rigaOrdineKey.theOrdineObjectKey', this.entity?.objectKey);\r\n      this.theEntitylink = this.entity?._links.theRigaOrdine?.href;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n<bz-card [bzSpinner]=\"spinner\" *ngIf=\"!(pageStatus | hasPageStatus: ['new','edit']) || readonly\">\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n         {{ 'header.list' | translate }}  Riga Ordine\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\r\n\t    <!--  {{ 'header.detail' | translate }}  Riga Ordine -->\r\n\t    <bz-table [sources]=\"rigaOrdineList\" [pageSize]=\"pageSize\" [nVisiblePages]=\"3\" [totalPages]=\"totalPages\"\r\n\t    (pageObject)=\"paginateTable($event)\" paginatedBe>\r\n\t       \r\n\t\r\n\t\r\n\t\t\r\n\t         <!-- Prodotto -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"theProdottoObjectKey\" scope=\"col\"> Prodotto </th>\r\n                 <td *bzColumnDef=\"let element\"> {{element.rigaOrdineKey.theProdottoObjectKey}}</td>\r\n\t\t\r\n\t\r\n\t        <!-- Quantita -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"quantita\" scope=\"col\"> Quantita </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.quantita}}</td>\r\n\t\r\n\r\n\t        <ng-container bzTableNoValue>  {{ 'label.noElement' | translate }}  Riga Ordine </ng-container>\r\n\t\r\n\t    </bz-table>\r\n\r\n\t</bz-card-content>\r\n\r\n</bz-card>\r\n\r\n\r\n\r\n<!-- Add Riga Ordine -->\r\n<bz-card *ngIf=\"(pageStatus | hasPageStatus: ['new','edit']) && !readonly\">\r\n\r\n    <bz-card-header>\r\n         {{ 'header.list' | translate }}  Riga Ordine\r\n    </bz-card-header>\r\n\r\n\t\t<bz-card-content>\r\n   \r\n\t\t <bz-table  [bzSmartTable]=\"rigaOrdineList\"  [bzFormGroup]=\"smartFormGroup\"  [bzDisabledControls]=\"['theOrdineObjectKey']\"   [bzDisabledControls]=\"['theProdottoObjectKey']\"  \r\n\t\t [bzForm]= \"form\"  (smartArray)=\"getSmartArray($event)\" withIndex paginated>\r\n\t\t        \r\n\t\t        <!-- Prodotto -->\r\n\t\t        <th bzHeaderColumn class=\"prodotto-column-width\" scope=\"col\"> Prodotto </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element.value\">\r\n                    <div formGroupName=\"rigaOrdineKey\"> \r\n\t\t          <bz-input formControlName=\"theProdottoObjectKey\">\r\n\t\t\t\t\t\t<button bzInputButton status=\"primary\" (click)=\"showProdottoListDialog(element.rowIndex)\">\r\n      \t\t\t\t\t\t<bz-icon iconName=\"fa fa-window-maximize\"></bz-icon>\r\n \t\t\t\t\t    </button>\t\t\t\r\n\t\t\t\t  </bz-input>\r\n                    </div>\r\n\t\t       \r\n\t\t        </td>\r\n\t\t\r\n\t\t\r\n\t\t        <!-- Quantita -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> Quantita </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"quantita\"></bz-input>\r\n\t\t        </td>\r\n\t\t\r\n\t\t        <!-- Remove Riga Ordine -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> </th>\r\n\t\t        <td *bzColumnDef=\"let element\" >\r\n\t\t            <button  bzButton [bzRemoveRow]=\"element\" status=\"danger\"  >\r\n\t\t                {{ 'buttons.delete' | translate }} \r\n\t\t            </button>\r\n\t\t            <button  bzButton [bzRestoreRow]=\"element\" status=\"primary\"  >\r\n\t\t               {{ 'buttons.restore' | translate }} \r\n\t\t            </button>\r\n\t\t        </td>\r\n\t\t\r\n\t\t    \r\n\t\t        <ng-container >  {{ 'label.noElement' | translate }} Riga Ordine </ng-container>\r\n\t\t\r\n\t\t        <button bzButton bzAddRow >{{ 'buttons.new' | translate }}  Riga Ordine </button>\r\n\t\t\r\n\t\t    </bz-table>\r\n\r\n\t</bz-card-content>\t\t\t\r\n   \t\r\n</bz-card>\r\n\r\n\r\n\r\n\r\n\r\n","\r\n import { Injectable, Injector} from \"@angular/core\";\r\n import { OrdineApiService } from './ordine-api.service';\r\n    import { ClienteApiService } from '../../voila2sample-ms-demo-fe/cliente/cliente-api.service'\r\n    import { TipoOrdineApiService } from '../../voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine-api.service'\r\n\r\n@Injectable() \r\nexport class OrdineGroupApiService {\r\n\r\n     private ordineApiService !: OrdineApiService;\r\n    \tprivate\tclienteApiService !: ClienteApiService\r\n    \tprivate\ttipoOrdineApiService !: TipoOrdineApiService\r\n\r\n    constructor(private injector: Injector){}\r\n\r\n     get ordine(): OrdineApiService {\r\n        if(!this.ordineApiService)\r\n           this.ordineApiService = this.injector.get(OrdineApiService);\r\n        return this.ordineApiService;\r\n     }\r\n\r\n\r\n        get cliente() : ClienteApiService {\r\n           if(!this.clienteApiService)\r\n               this.clienteApiService = this.injector.get(ClienteApiService);\r\n           return this.clienteApiService;\r\n        }\r\n        get tipoOrdine() : TipoOrdineApiService {\r\n           if(!this.tipoOrdineApiService)\r\n               this.tipoOrdineApiService = this.injector.get(TipoOrdineApiService);\r\n           return this.tipoOrdineApiService;\r\n        }\r\n   \r\n}\r\n\r\n","\r\nimport {  Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup} from '@angular/forms';\r\nimport { ButtonService } from '../../../../utilities/services/buttons.service';\r\nimport { IOrdine , IOrdineDto } from '../ordine.interface';\r\nimport { OrdineApiService } from '../ordine-api.service';\r\nimport { OrdineGroupApiService } from '../ordine-group-api.service';\r\nimport { ordineForm} from '../ordine-form';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from '../../../../utilities/services/toastr.service';\r\nimport { RouteService } from '../../../../utilities/services/route.service';\r\nimport { ConfirmDialogService } from '../../../../utilities/dialog/confirm-dialog.service';\r\nimport { BaseComponent } from '../../../../shared/base/base.component';\r\nimport { PageStatus } from '../../../../utilities/enum/page-status.enum';\r\nimport { OverlaysService } from '../../../../utilities/services/overlays.service';\r\nimport { ordine_ } from '../ordine.constant';\r\nimport { Data } from '@angular/router';\r\nimport { ApiResponse, getIdFromPath,  isInViewEditMode,  navigateToPath, getListForDropdown,\r\n  getPrivilegesEnum, getPrivileges, extractResponse, isInNewMode} from \"voila2-runtime-ng\";\r\nimport { setTabObjectKey } from 'src/app/shared/base/base.helper';\r\nimport { ICliente } from '../../../voila2sample-ms-demo-fe/cliente/cliente.interface';\r\nimport { ClienteApiService } from '../../../voila2sample-ms-demo-fe/cliente/cliente-api.service';\r\nimport { ITipoOrdine } from '../../../voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine.interface';\r\nimport { TipoOrdineApiService } from '../../../voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine-api.service';\r\nimport { TranslatePipe } from 'translate-ng';\r\nimport { Ordine } from '../ordine.model';\r\n\r\nconst PROVIDERS = [\r\n  OrdineApiService, \r\n  ButtonService,  \r\n  OverlaysService, \r\n  RouteService, \r\n  ConfirmDialogService,\r\n  OrdineGroupApiService,\r\n  ClienteApiService,\r\n  TipoOrdineApiService,\r\n]\r\n\r\n@Component({\r\n  selector: 'app-detail-ordine',\r\n  templateUrl: './detail-ordine.component.html',\r\n  styleUrls: ['./detail-ordine.component.scss'],\r\n  providers: [...PROVIDERS ]\r\n})\r\nexport class DetailOrdineComponent extends BaseComponent<IOrdine, IOrdineDto> implements OnInit {\r\n\r\n  public ordineForm !: FormGroup;\r\n  public ordine !: IOrdine;\r\n  public clienteList : ICliente[] = [];\r\n  public tipoOrdineList : ITipoOrdine[] = [];\r\n  public ordineList : IOrdine[] = [];\r\n  public spinner: boolean = true;\r\n\r\n   public privileges: string[] = getPrivileges();\r\n  \r\n   public get Privileges(): any {\r\n    return  getPrivilegesEnum(); \r\n   }\r\n\r\n  constructor(\r\n    public buttonsService: ButtonService,\r\n    private formBuilder: FormBuilder,\r\n    private routeService: RouteService,\r\n    private overlaysService: OverlaysService,\r\n    private injector: Injector,\r\n    private ordineGroupApiService : OrdineGroupApiService\r\n  ) { super()}\r\n\r\n  ngOnInit(): void {\r\n    this.ordineForm = ordineForm(this.formBuilder);\r\n    this.routeService.route.data.subscribe(\r\n      (data: Data) => {\r\n        this.pageStatus = data.pageSatus;\r\n      }\r\n    )\r\n    this.getOrdineById();\r\n    this.setTabPageStatusOnInit();\r\n       this.getParentsList();\r\n    if(isInNewMode(this.pageStatus))\r\n          this.spinner = false;\r\n  }\r\n\r\n\r\n  public insertOrdine(): void {\r\n    const ordine: IOrdine = this.ordineForm.value;\r\n\t   setTabObjectKey( ordine, new Ordine(ordine), 'theRigaOrdine', 'rigaOrdineKey.theOrdineObjectKey');\r\n setTabObjectKey( ordine, new Ordine(ordine), 'theOrdineFigli','theOrdineObjectKey');\r\n\tthis.ordineGroupApiService.ordine.addOrdine(ordine).subscribe(\r\n      (ordineResult: ApiResponse<IOrdine>) => {\r\n         const toast: ToastrService = this.overlaysService.toast;\r\n        this.ordine = this.manageResponse(ordineResult, toast, new TranslatePipe(this.injector));\r\n        console.log(\"Ordine .... \", this.ordine)\r\n        if(this.ordine)\r\n          navigateToPath('/pages/ms-demo/ordine/detail-ordine/' + this.ordine.objectKey + '/view', this.routeService.router);\r\n      }\r\n    )\r\n  }\r\n\r\n  public getOrdineById(): void {\r\n    if (isInViewEditMode(this.pageStatus)) {\r\n      const id = getIdFromPath(this.routeService.route);\r\n      if (id) {\r\n        this.ordineGroupApiService.ordine.getOrdineById(id).subscribe(\r\n          (ordineResult: ApiResponse<IOrdine>) => {\r\n            this.ordine = ordineResult.response;\r\n            this.setTabPageStatus(this.pageStatus);\r\n            this.fillForm();\r\n            this.spinner = false;\r\n          },\r\n           () => {\r\n               this.spinner = false;\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  public fillForm(): void {\r\n    this.ordineForm.patchValue({\r\n          ordineKey : {\r\n            idOrdine:  this.ordine.ordineKey.idOrdine,\r\n            anno:  this.ordine.ordineKey.anno,\r\n          },\r\n\t\t      dataOrdine : this.ordine.dataOrdine,\r\n\t\t      urgente : this.ordine.urgente,\r\n\t\t\ttheClienteObjectKey: this.ordine.theClienteObjectKey,\r\n\t\t\ttheTipoOrdineObjectKey: this.ordine.theTipoOrdineObjectKey,\r\n\t\t\ttheOrdinePadreObjectKey: this.ordine.theOrdinePadreObjectKey,\r\n\t\r\n      });\r\n  }\r\n\r\n\r\n  public editOrdine(): void {\r\n   // this.setStatusPage(PageStatus.EDIT, this.routeService.location);\r\n   // this.getOrdineById();\r\n   navigateToPath('/pages/ms-demo/ordine/detail-ordine/' + this.ordine.objectKey + '/edit', this.routeService.router);\r\n  }\r\n\r\n\r\n  public updateOrdine(): void {\r\n    const ordine: IOrdine = this.ordineForm.value;\r\n    this.ordineGroupApiService.ordine.updateOrdine(ordine).subscribe(\r\n      (ordineResult: ApiResponse<IOrdine>) => {\r\n        const toast: ToastrService = this.overlaysService.toast;\r\n        this.ordine = this.manageResponse(ordineResult,toast, new TranslatePipe(this.injector));\r\n        if(this.ordine)\r\n          navigateToPath('/pages/ms-demo/ordine/detail-ordine/' + this.ordine.objectKey + '/view', this.routeService.router);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete ordine by id.\r\n   */\r\n  public deleteOrdineById(): void {\r\n\t this.ordineGroupApiService.ordine.deleteOrdine(this.ordine.objectKey).subscribe(\r\n      () => {\r\n        this.overlaysService.toast.showSuccess(ordine_.detail.toast.SUCCESS_DELETE);\r\n        navigateToPath(ordine_.detail.path.LIST, this.routeService.router);\r\n        this.overlaysService.dialog.closeDialog();\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Confirm delete ordine.\r\n   */\r\n  public confirmDeleteOrdine() : void {\r\n    const message: string = ordine_.detail.dialog.DELETE_MESSAGE;\r\n    this.overlaysService.confirmDialog.openConfirmDialog(message).subscribe(\r\n      (isTrue: boolean) => {\r\n        if(isTrue)\r\n         this.deleteOrdineById();\r\n      }\r\n    )\r\n  }\r\n\r\n \r\n   public getClienteList() : void {\r\n      this.ordineGroupApiService.cliente.getClienteByCriteria().subscribe(\r\n         (data) => {\r\n              this.clienteList = getListForDropdown('cliente', data);\r\n           }\r\n         )\r\n       }\r\n   public getTipoOrdineList() : void {\r\n      this.ordineGroupApiService.tipoOrdine.getTipoOrdineByCriteria().subscribe(\r\n         (data) => {\r\n              this.tipoOrdineList = getListForDropdown('tipoOrdine', data);\r\n           }\r\n         )\r\n       }\r\n   public getOrdineList() : void {\r\n      this.ordineGroupApiService.ordine.getOrdineByCriteria().subscribe(\r\n         (data) => {\r\n              this.ordineList = getListForDropdown('ordine', data);\r\n           }\r\n         )\r\n       }\r\n\r\n     private getParentsList() : void {\r\n        this.getClienteList();\r\n        this.getTipoOrdineList();\r\n        this.getOrdineList();\r\n     }\r\n\r\n  \r\n}\r\n\r\n\r\n\r\n","<form [formGroup]=\"ordineForm\">\r\n    <bz-card>\r\n        <bz-card-header> \r\n\t\t\t{{ 'header.detail' | translate }} Ordine\r\n \t\t\t<i bzTooltip=\"Ordine\" class=\"fa fa-question-circle\"></i>\r\n\t\t</bz-card-header>\r\n\r\n\t\t<bz-card-content>\r\n\r\n\t        <ng-container *ngIf=\"pageStatus | hasPageStatus: ['new','edit']\">\r\n\r\n           \r\n            <div formGroupName=\"ordineKey\">\r\n\r\n\t\r\n\t\t\t\t\r\n\t\t\t\t<!-- Id Ordine-->\r\n\t\t\t\t\t            <div class=\"fk-row inputs\">\r\n\t\t\t\t\t                <div class=\"fk-col-8\">\r\n\t\t\t\t\t\t\t\t\t\t <bz-input label=\"Id Ordine:\" formControlName=\"idOrdine\" type=\"number\"[disableAttr]=\"pageStatus | hasPageStatus: 'edit'\">\r\n\t\t\t\t\t                        <bz-error> Id Ordine  {{ 'label.obligatoryValues' | translate }} </bz-error>\r\n\t\t\t\t\t                    </bz-input>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t\r\n               \r\n\t\t\t\t\r\n\t\t\t\t<!-- Anno-->\r\n\t\t\t\t\t            <div class=\"fk-row inputs\">\r\n\t\t\t\t\t                <div class=\"fk-col-8\">\r\n\t\t\t\t\t\t\t\t\t\t <bz-input label=\"Anno:\" formControlName=\"anno\" type=\"number\"[disableAttr]=\"pageStatus | hasPageStatus: 'edit'\">\r\n\t\t\t\t\t                        <bz-error> Anno  {{ 'label.obligatoryValues' | translate }} </bz-error>\r\n\t\t\t\t\t                    </bz-input>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t\r\n               \r\n\t\r\n            </div> <!-- end formGroup -->\r\n                       <!-- Data Ordine-->\r\n                       \t            <div class=\"fk-row inputs\">\r\n                       \t                <div class=\"fk-col-8\">\r\n                       \t\t\t\t\t\t\t<bz-date-picker label=\"Data Ordine:\" controlName=\"dataOrdine\" type=\"Date\" >\r\n                       \t                        \t<bz-error> Data Ordine  {{ 'label.obligatoryValues' | translate }}  </bz-error>\r\n                       \t                    \t</bz-date-picker>\r\n                       \t\t\t\t\t\t\r\n                       \t\r\n                       \t                </div>\r\n                       \t            </div>\r\n                       \r\n                       <!-- Urgente-->\r\n                       \t            <div class=\"fk-row inputs\">\r\n                       \t                <div class=\"fk-col-8\">\r\n                       \t\t\t\t\t\t\r\n                       \t\t\t\t\t\t<bz-switch label=\"Urgente\" ariaId=\"Urgente\" formControlName=\"urgente\" type=\"boolean\"></bz-switch>\r\n                       \t\r\n                       \t                </div>\r\n                       \t            </div>\r\n                       \r\n\t                 <!-- Cliente   -->\r\n\t                 \t          <div class=\"fk-row inputs\">\r\n\t                 \t               <div class=\"fk-col-8\">\r\n\t                 \t                       <bz-dropdown label=\"Cliente\" [options]=\"clienteList\" optionLabel=\"objectTitle\" optionValue=\"objectKey\" formControlName=\"theClienteObjectKey\">\r\n\t                 \t                       <bz-error></bz-error>\r\n\t                 \t                       </bz-dropdown>\r\n\t                 \t                </div>\r\n\t                 \t           </div> \r\n\t                 <!-- Tipo Ordine   -->\r\n\t                 \t          <div class=\"fk-row inputs\">\r\n\t                 \t               <div class=\"fk-col-8\">\r\n\t                 \t                       <bz-dropdown label=\"Tipo Ordine\" [options]=\"tipoOrdineList\" optionLabel=\"objectTitle\" optionValue=\"objectKey\" formControlName=\"theTipoOrdineObjectKey\">\r\n\t                 \t                       <bz-error></bz-error>\r\n\t                 \t                       </bz-dropdown>\r\n\t                 \t                </div>\r\n\t                 \t           </div> \r\n\t                 <!-- Ordine   -->\r\n\t                 \t          <div class=\"fk-row inputs\">\r\n\t                 \t               <div class=\"fk-col-8\">\r\n\t                 \t                       <bz-dropdown label=\"Ordine\" [options]=\"ordineList\" optionLabel=\"objectTitle\" optionValue=\"objectKey\" formControlName=\"theOrdinePadreObjectKey\">\r\n\t                 \t                       <bz-error></bz-error>\r\n\t                 \t                       </bz-dropdown>\r\n\t                 \t                </div>\r\n\t                 \t           </div> \r\n        \r\n\t        </ng-container>\r\n\t\r\n\t        <div *ngIf=\"pageStatus | hasPageStatus: 'view'\">\r\n\t\r\n\t\t\t\t<!-- Id Ordine -->\r\n\t\t\t\t  <label  > Id Ordine: </label>\r\n\t            <div class=\"fk-row inputs\">\r\n\t                <div class=\"fk-col-8\"><strong>{{ ordine?.ordineKey?.idOrdine  }}</strong></div>\r\n\t            </div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Anno -->\r\n\t\t\t\t  <label  > Anno: </label>\r\n\t            <div class=\"fk-row inputs\">\r\n\t                <div class=\"fk-col-8\"><strong>{{ ordine?.ordineKey?.anno  }}</strong></div>\r\n\t            </div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Data Ordine -->\r\n\t\t\t\t  <label  > Data Ordine: </label>\r\n\t            <div class=\"fk-row inputs\">\r\n\t                <div class=\"fk-col-8\"><strong>{{ ordine?.dataOrdine  | date : 'dd/MM/YYYY '  }}</strong></div>\r\n\t            </div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Urgente -->\r\n\t\t\t\t  <label  > Urgente: </label>\r\n\t            <div class=\"fk-row inputs\">\r\n\t                <div class=\"fk-col-8\"><strong>{{ ordine?.urgente  }}</strong></div>\r\n\t            </div>\r\n\t\t\t\t\r\n\t\r\n                <!--Cliente-->\r\n\t\t\t\t <label> Cliente: </label>\r\n\t\t\t\t<div class=\"fk-row inputs\">\r\n                        <div class=\"fk-col-8\"><strong>{{ ordine?.theClienteObjectTitle}}</strong></div>\r\n\t            </div>\r\n                <!--Tipo Ordine-->\r\n\t\t\t\t <label> Tipo Ordine: </label>\r\n\t\t\t\t<div class=\"fk-row inputs\">\r\n                        <div class=\"fk-col-8\"><strong>{{ ordine?.theTipoOrdineObjectTitle}}</strong></div>\r\n\t            </div>\r\n                <!--Ordine-->\r\n\t\t\t\t <label> Ordine: </label>\r\n\t\t\t\t<div class=\"fk-row inputs\">\r\n                        <div class=\"fk-col-8\"><strong>{{ ordine?.theOrdinePadreObjectTitle}}</strong></div>\r\n\t            </div>\r\n             </div>\r\n\t\r\n\t        \r\n\t        <!--Tabs ordine -->\r\n\t        <app-tabs-ordine [formGroup]=\"ordineForm\" [entity]=\"ordine\" [pageStatus]=\"tabPageStatus\"></app-tabs-ordine>\r\n\r\n\t\t</bz-card-content>\r\n\r\n    </bz-card>\r\n\r\n    <!-- Buttons -->\r\n    <bz-card class=\"card\">\r\n\t\t<bz-card-content>\t\r\n\t        <button bzButton status=\"primary\" type=\"button\" (click)=\"buttonsService.goBack()\"> {{ 'buttons.goBack' | translate }} </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: 'new') && (Privileges?.ORDINE_CREATE | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"insertOrdine()\" [bzCheckForm]=\"ordineForm\"> {{ 'buttons.save' | translate }}  </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: 'view') && (Privileges?.ORDINE_FIND_BY_ID | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"editOrdine()\" type=\"button\"> {{ 'buttons.edit' | translate }}  </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: 'edit') && (Privileges?.ORDINE_UPDATE | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"updateOrdine()\" [bzCheckForm]=\"ordineForm\"> {{ 'buttons.save' | translate }}  </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: ['edit','view']) && (Privileges?.ORDINE_DELETE | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"confirmDeleteOrdine()\" > {{ 'buttons.delete' | translate }}  </button>\r\n\t\t\t\r\n\t\t</bz-card-content>\t\r\n    </bz-card>\r\n\r\n</form>\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { getAuthGuards } from \"src/app/security/security.config\";\r\nimport { AuthGuard, getPrivilegesEnum } from 'voila2-runtime-ng';\r\nimport { DetailOrdineComponent } from \"./detail-ordine/detail-ordine.component\";\r\nimport { ListOrdineComponent } from \"./list-ordine/list-ordine.component\";\r\n\r\nconst Privileges = getPrivilegesEnum();\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      children: [\r\n        {\r\n            path:'list-ordine', \r\n            component: ListOrdineComponent,\r\n            canActivate: getAuthGuards(), \r\n            data: {privileges: [ Privileges.ORDINE_FIND_PAGINATED ]}\r\n        },\r\n        {\r\n           path: 'detail-ordine/new', \r\n           component: DetailOrdineComponent,\r\n           canActivate: getAuthGuards(),\r\n           data: {pageSatus: 'new', privileges: [ Privileges.ORDINE_CREATE ]}\r\n        },\r\n        {\r\n          path: 'detail-ordine/:id/view', \r\n          component: DetailOrdineComponent,\r\n          canActivate: getAuthGuards(), \r\n          data: {pageSatus: 'view', privileges: [ Privileges.ORDINE_FIND_BY_ID ]}\r\n        },\r\n        {\r\n          path: 'detail-ordine/:id/edit', \r\n          component: DetailOrdineComponent,\r\n          canActivate: getAuthGuards(), \r\n          data: {pageSatus: 'edit', privileges: [ Privileges.ORDINE_UPDATE ]}\r\n        }\r\n      ]\r\n    }\r\n   \r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class OrdineRoutingModule { }\r\n\r\n\r\n","\r\nimport { BaseModel } from \"../../../shared/base/base.model\";\r\nimport { BzAutoMapper, BzStringBuilder, ObjectUtils } from \"blazing\";\r\n\r\n\r\nimport { IOrdineLinks, IOrdine, \r\n  } from \"./ordine.interface\";\r\nimport {IOrdineKey} from \"../ordine/ordine.interface\"\r\n\r\nexport class Ordine extends BaseModel {\r\n       ordineKey !: IOrdineKey\r\n\t\t  dataOrdine !: Date\r\n\t\t  urgente !: boolean\r\n    \t\ttheClienteObjectKey!: string;\r\n            theClienteObjectTitle!: string;\r\n    \t\ttheTipoOrdineObjectKey!: string;\r\n            theTipoOrdineObjectTitle!: string;\r\n    \t\ttheOrdinePadreObjectKey!: string;\r\n            theOrdinePadreObjectTitle!: string;\r\n   _links !: IOrdineLinks;\r\n    \r\n   constructor(ordine: IOrdine) {super(); this.mapEntity(ordine)}\r\n\r\n    /**\r\n     * Get Ordine objectKey.\r\n     * \r\n     * @returns \r\n     */\r\n    public getObjectKey() : string {\r\n      const bzStringBuilder: BzStringBuilder = new BzStringBuilder();\r\n      const builder = bzStringBuilder\r\n        .append(this.ordineKey.idOrdine)\r\n        .append('~')\r\n        .append(this.ordineKey.anno)\r\n        \r\n       return builder.value;\r\n    }\r\n    \r\n    /**\r\n     * Map entity to model.\r\n     * \r\n     * @param prodotto \r\n     */\r\n     private mapEntity(ordine: IOrdine) : void {\r\n        if(ordine) {\r\n            const bzAutoMapper: BzAutoMapper = BzAutoMapper.getInstance();\r\n            console.log(\"FFFFFFFF....\", ObjectUtils.isAnObject(this) ) \r\n            bzAutoMapper.map('Ordine', 'IOrdine', ordine, this);\r\n            console.log(\"THIS ::::::: \", this)\r\n        }\r\n     }\r\n}\r\n\r\n\r\n","import { HttpParams } from '@angular/common/http';\r\nimport {  Component, ViewChild } from '@angular/core';\r\nimport { PageObject, PaginationUtils } from 'blazing';\r\nimport { BaseComponent } from '../../../../shared/base/base.component';\r\nimport { IOrdine , IOrdineDto } from '../ordine.interface';\r\nimport { OrdineApiService } from '../ordine-api.service';\r\nimport { ButtonService } from '../../../../utilities/services/buttons.service';\r\nimport { SearchOrdineComponent } from './search-ordine/search-ordine.component';\r\nimport { Router } from '@angular/router';\r\nimport { extractResponse, extractTotalPages, navigateToPath, getPrivilegesEnum, getPrivileges } from 'voila2-runtime-ng';\r\n\r\n\r\n@Component({\r\n  selector: 'app-list-ordine',\r\n  templateUrl: './list-ordine.component.html',\r\n  styleUrls: ['./list-ordine.component.scss'],\r\n  providers:  [OrdineApiService, ButtonService]\r\n})\r\nexport class ListOrdineComponent extends BaseComponent<IOrdine,IOrdineDto>  {\r\n\r\n\r\n  public ordineList: IOrdine [] =  [];\r\n  public ordine!: IOrdine;\r\n  public totalPages: number = 0;\r\n  public spinner: boolean = true;\r\n  public ordineCriteria !: any;\r\n  public pageSize: number = 5;\r\n\r\n  public privileges: string[] = getPrivileges();\r\n  \r\n  public get Privileges(): any {\r\n    return  getPrivilegesEnum(); \r\n  }\r\n \r\n\r\n  @ViewChild(SearchOrdineComponent)  searchOrdine !: SearchOrdineComponent;\r\n  \r\n\r\n  constructor(\r\n    private ordineApiService: OrdineApiService,\r\n    public router: Router,\r\n  ) { super() }\r\n\r\n  \r\n  public paginateTable(object: any, criteria?: any): void {\r\n    const options: HttpParams = PaginationUtils.setOptionsForSpring(object, criteria);\r\n    this.ordineApiService.getOrdineByCriteria(options).subscribe(\r\n      (data) => {\r\n        this.ordineList = extractResponse('ordine', data);\r\n        this.totalPages = extractTotalPages(data);\r\n        this.spinner = false;\r\n      },\r\n      () => {\r\n        this.spinner = false;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  public searchWithCriteria() : void {\r\tthis.ordineCriteria = this.searchOrdine.search();\r\n     const object: PageObject  = { page: 0, pageSize: this.pageSize};\r\n     this.paginateTable(object, this.ordineCriteria);\r\n  }\r\n\r\n\r\n  public navigateToView(id: number) : void {\r\n   navigateToPath('/pages/ms-demo/ordine/detail-ordine/' + id + '/view', this.router);\r\n  }\r\n\r\n\t\r\n\r\n}\r\n\r\n","\r\n<bz-card [bzSpinner]=\"spinner\">\r\n\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n        Ordine {{ 'header.list' | translate }}\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\t\r\n\t    <!-- Tabella tipo ordine -->\r\n\t    <bz-table [sources]=\"ordineList\" [pageSize]=\"pageSize\" [nVisiblePages]=\"3\" [totalPages]=\"totalPages\"\r\n\t        (pageObject)=\"paginateTable($event, ordineCriteria)\" paginatedBe>\r\n\t\r\n\t\r\n\r\n\t\t\t\r\n\t\t\t<!-- Id ordine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"idOrdine\" scope=\"col\" > Id Ordine </th>\r\n\t        <td *bzColumnDef=\"let ordine\"> \r\n\t            <div class=\"fk-pointer\" (click)=\"navigateToView(ordine.objectKey)\" >{{ordine.ordineKey.idOrdine}}</div>  \r\n\t        </td>\r\n\t\t\t<!-- Id ordine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"anno\" scope=\"col\" > Anno </th>\r\n\t        <td *bzColumnDef=\"let ordine\"> \r\n\t            <div class=\"fk-pointer\" (click)=\"navigateToView(ordine.objectKey)\" >{{ordine.ordineKey.anno}}</div>  \r\n\t        </td>\r\n\r\n\t\t\t\r\n\t\r\n\t        \t<!-- Data Ordine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"dataOrdine\" scope=\"col\" > Data Ordine </th>\r\n\t        <td *bzColumnDef=\"let ordine\"> {{ordine.dataOrdine }}</td>\r\n\t        \t<!-- Urgente -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"urgente\" scope=\"col\" > Urgente </th>\r\n\t        <td *bzColumnDef=\"let ordine\"> {{ordine.urgente }}</td>\r\n\t\r\n\t\t\t\t <!-- Cliente -->\r\n\t        \t<th bzHeaderColumn  scope=\"col\" > Cliente </th>\r\n\t        \t<td *bzColumnDef=\"let ordine\"> {{ordine.theClienteObjectTitle}}</td>\r\n\t\t\t\t <!-- Tipo Ordine -->\r\n\t        \t<th bzHeaderColumn  scope=\"col\" > Tipo Ordine </th>\r\n\t        \t<td *bzColumnDef=\"let ordine\"> {{ordine.theTipoOrdineObjectTitle}}</td>\r\n\t\t\t\t <!-- Ordine -->\r\n\t        \t<th bzHeaderColumn  scope=\"col\" > Ordine </th>\r\n\t        \t<td *bzColumnDef=\"let ordine\"> {{ordine.theOrdinePadreObjectTitle}}</td>\r\n\t\r\n\t        <ng-container bzTableNoValue> {{ 'label.noElements' | translate }} Ordine </ng-container>\r\n\r\n\t    </bz-table>\r\n\r\n\t</bz-card-content>\r\n\r\n</bz-card>\r\n\r\n<!-- Search with criteria -->\r\n<app-search-ordine></app-search-ordine>\r\n\r\n<!-- Buttons -->\r\n<bz-card class=\"card\">\r\n\t<bz-card-content>\r\n\t    <button bzButton status=\"primary\" class=\"button\" (click)=\"searchWithCriteria()\"> Cerca</button>\r\n\t    <button bzButton status=\"primary\" class=\"button\" *ngIf=\"Privileges?.ORDINE_CREATE | hasPermission : privileges\"\r\n\t     routerLink=\"/pages/ms-demo/ordine/detail-ordine/new\" > {{ 'buttons.new' | translate }} </button>\r\n\t\t\r\n\t</bz-card-content>\r\n</bz-card>\r\n\r\n\r\n\r\n","\r\nimport { Component, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BzDialogService, PageObject } from 'blazing';\r\nimport { OrdineApiService } from 'src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-api.service';\r\nimport { ordineForm } from 'src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-form';\r\nimport { DialogListClienteComponent } from 'src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-cliente/dialog-list-cliente.component';\r\nimport { DialogListTipoOrdineComponent } from 'src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-tipo-ordine/dialog-list-tipo-ordine.component';\r\nimport { BaseTabComponent } from 'src/app/shared/base/base-tab.component';\r\nimport { fillOptions } from 'src/app/shared/base/base.helper';\r\nimport { extractResponse, extractTotalPages, setControl } from 'voila2-runtime-ng';\r\nimport { IOrdine } from '../../../ordine.interface';\r\n\r\n@Component({\r\n  selector: 'app-tab-ordine-figli',\r\n  templateUrl: './tab-ordine-figli.component.html',\r\n  styleUrls: ['./tab-ordine-figli.component.scss'],\r\n  providers: [OrdineApiService]\r\n})\r\nexport class TabOrdineFigliComponent extends BaseTabComponent<IOrdine> implements OnChanges {\r\n\r\n\r\n  public theOrdineFigli !: FormArray;\r\n  public theOrdineFigliList !: AbstractControl[];\r\n  public ordineFigliList: IOrdine[] = []\r\n  public form: FormGroup = ordineForm(this.formBuilder);\r\n  public smartFormGroup: FormGroup = this.formBuilder.group({});\r\n\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ordineApiService: \r\n     OrdineApiService,\r\n    private dialogService: BzDialogService\r\n  ) { super() }\r\n\r\n\r\n\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    this.manageEntityChanges(changes);\r\n    this.managePageStatusChanges(changes);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Paginate table.\r\n   * \r\n   */\r\n  public paginateTable(object: any): void {\r\n    let options = fillOptions(this.pageStatus, object);\r\n    if (this.theEntitylink) {\r\n      this.ordineApiService.getListOrdineByLink(this.theEntitylink, options).subscribe(\r\n        (data: any) => {\r\n          this.ordineFigliList = extractResponse('ordine', data);\r\n          this.totalPages = extractTotalPages(data);\r\n          this.spinner = false;\r\n        },\r\n        () => {\r\n          this.spinner = false;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  public getSmartArray(smartArray: any): void {\r\n    if (this.smartFormGroup.valid || this.smartFormGroup.status === \"DISABLED\") {\r\n      setControl(this.formGroup,'theOrdineFigli', smartArray);\r\n    }\r\n  }\r\n\r\n\r\n  public showClienteListDialog(index: number): void {\r\n    this.dialogService.showDialog(DialogListClienteComponent).subscribe(\r\n      (data) => {\r\n        if (data) {\r\n\t\t  \r\n          this.setSmartControlByIndex(this.smartFormGroup, index, data, 'objectKey', 'theClienteObjectKey');\r\n          \r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n  public showTipoOrdineListDialog(index: number): void {\r\n    this.dialogService.showDialog(DialogListTipoOrdineComponent).subscribe(\r\n      (data) => {\r\n        if (data) {\r\n\t\t  \r\n          this.setSmartControlByIndex(this.smartFormGroup, index, data, 'objectKey', 'theTipoOrdineObjectKey');\r\n          \r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  private managePageStatusChanges(changes: SimpleChanges): void {\r\n    const pageStatusChanges: SimpleChange = changes.pageStatus;\r\n    if (pageStatusChanges?.currentValue) {\r\n      this.ordineFigliList = [];\r\n      const object: PageObject = this.managePageStatus(pageStatusChanges, this.smartFormGroup);\r\n      this.paginateTable(object);\r\n    }\r\n  }\r\n\r\n  private manageEntityChanges(changes: SimpleChanges): void {\r\n    const entityChanges: SimpleChange = changes.entity;\r\n    if (entityChanges) {\r\n      this.entity = entityChanges.currentValue;\r\n      setControl(this.form,'theOrdineObjectKey', this.entity?.objectKey);\r\n      this.theEntitylink = this.entity?._links.theOrdineFigli?.href;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n<bz-card [bzSpinner]=\"spinner\" *ngIf=\"!(pageStatus | hasPageStatus: ['new','edit']) || readonly\">\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n         {{ 'header.list' | translate }}  Ordine Figli\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\r\n\t    <!--  {{ 'header.detail' | translate }}  Ordine Figli -->\r\n\t    <bz-table [sources]=\"ordineFigliList\" [pageSize]=\"pageSize\" [nVisiblePages]=\"3\" [totalPages]=\"totalPages\"\r\n\t    (pageObject)=\"paginateTable($event)\" paginatedBe>\r\n\t       \r\n\t\r\n\t\r\n\t\r\n\t        <!-- IdOrdine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"idOrdine\" scope=\"col\"> IdOrdine </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.ordineKey.idOrdine}}</td>\r\n\t        <!-- Anno -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"anno\" scope=\"col\"> Anno </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.ordineKey.anno}}</td>\r\n\t        <!-- DataOrdine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"dataOrdine\" scope=\"col\"> DataOrdine </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.dataOrdine}}</td>\r\n\t        <!-- Urgente -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"urgente\" scope=\"col\"> Urgente </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.urgente}}</td>\r\n\t\r\n\t         <!-- Cliente -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"theClienteObjectKey\" scope=\"col\"> Cliente </th>\r\n                 <td *bzColumnDef=\"let element\"> {{element.theClienteObjectKey }}</td>\r\n\t         <!-- Tipo Ordine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"theTipoOrdineObjectKey\" scope=\"col\"> Tipo Ordine </th>\r\n                 <td *bzColumnDef=\"let element\"> {{element.theTipoOrdineObjectKey }}</td>\r\n\r\n\t        <ng-container bzTableNoValue>  {{ 'label.noElement' | translate }}  Ordine Figli </ng-container>\r\n\t\r\n\t    </bz-table>\r\n\r\n\t</bz-card-content>\r\n\r\n</bz-card>\r\n\r\n\r\n\r\n<!-- Add Ordine Figli -->\r\n<bz-card *ngIf=\"(pageStatus | hasPageStatus: ['new','edit']) && !readonly\">\r\n\r\n    <bz-card-header>\r\n         {{ 'header.list' | translate }}  Ordine Figli\r\n    </bz-card-header>\r\n\r\n\t\t<bz-card-content>\r\n   \r\n\t\t <bz-table  [bzSmartTable]=\"ordineFigliList\"  [bzFormGroup]=\"smartFormGroup\"  [bzDisabledControls]=\"['theClienteObjectKey']\"   [bzDisabledControls]=\"['theTipoOrdineObjectKey']\"   [bzDisabledControls]=\"['theOrdineObjectKey']\"  \r\n\t\t [bzForm]= \"form\"  (smartArray)=\"getSmartArray($event)\" withIndex paginated>\r\n\t\t        \r\n\t\t        <!-- Cliente -->\r\n\t\t        <th bzHeaderColumn class=\"prodotto-column-width\" scope=\"col\"> Cliente </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element.value\">\r\n                    <div formGroupName=\"ordineKey\"> \r\n\t\t          <bz-input formControlName=\"theClienteObjectKey\">\r\n\t\t\t\t\t\t<button bzInputButton status=\"primary\" (click)=\"showClienteListDialog(element.rowIndex)\">\r\n      \t\t\t\t\t\t<bz-icon iconName=\"fa fa-window-maximize\"></bz-icon>\r\n \t\t\t\t\t    </button>\t\t\t\r\n\t\t\t\t  </bz-input>\r\n                    </div>\r\n\t\t       \r\n\t\t        </td>\r\n\t\t        <!-- TipoOrdine -->\r\n\t\t        <th bzHeaderColumn class=\"prodotto-column-width\" scope=\"col\"> TipoOrdine </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element.value\">\r\n                    <div formGroupName=\"ordineKey\"> \r\n\t\t          <bz-input formControlName=\"theTipoOrdineObjectKey\">\r\n\t\t\t\t\t\t<button bzInputButton status=\"primary\" (click)=\"showTipoOrdineListDialog(element.rowIndex)\">\r\n      \t\t\t\t\t\t<bz-icon iconName=\"fa fa-window-maximize\"></bz-icon>\r\n \t\t\t\t\t    </button>\t\t\t\r\n\t\t\t\t  </bz-input>\r\n                    </div>\r\n\t\t       \r\n\t\t        </td>\r\n\t\t\r\n\t\t\r\n\t\t        <!-- IdOrdine -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> IdOrdine </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"idOrdine\"></bz-input>\r\n\t\t        </td>\r\n\t\t        <!-- Anno -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> Anno </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"anno\"></bz-input>\r\n\t\t        </td>\r\n\t\t        <!-- DataOrdine -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> DataOrdine </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"dataOrdine\"></bz-input>\r\n\t\t        </td>\r\n\t\t        <!-- Urgente -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> Urgente </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"urgente\"></bz-input>\r\n\t\t        </td>\r\n\t\t\r\n\t\t        <!-- Remove Ordine Figli -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> </th>\r\n\t\t        <td *bzColumnDef=\"let element\" >\r\n\t\t            <button  bzButton [bzRemoveRow]=\"element\" status=\"danger\"  >\r\n\t\t                {{ 'buttons.delete' | translate }} \r\n\t\t            </button>\r\n\t\t            <button  bzButton [bzRestoreRow]=\"element\" status=\"primary\"  >\r\n\t\t               {{ 'buttons.restore' | translate }} \r\n\t\t            </button>\r\n\t\t        </td>\r\n\t\t\r\n\t\t    \r\n\t\t        <ng-container >  {{ 'label.noElement' | translate }} Ordine Figli </ng-container>\r\n\t\t\r\n\t\t        <button bzButton bzAddRow >{{ 'buttons.new' | translate }}  Ordine Figli </button>\r\n\t\t\r\n\t\t    </bz-table>\r\n\r\n\t</bz-card-content>\t\t\t\r\n   \t\r\n</bz-card>\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListOrdineComponent } from './list-ordine/list-ordine.component';\r\nimport { BzButtonModule, BzCardModule, BzDatePickerModule, BzDropdownModule, \r\n  BzErrorModule, BzEventModule, BzIconModule,\r\n  BzInputModule,\r\n BzSwitchModule, BzTableModule, BzTabsetModule, BzToastrModule, BzTooltipModule } from 'blazing';\r\nimport { OrdineRoutingModule } from './ordine-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SearchOrdineComponent } from './list-ordine/search-ordine/search-ordine.component';\r\nimport { DetailOrdineComponent } from './detail-ordine/detail-ordine.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { UtilityPipeModule } from '../../../utilities/pipe/utility-pipe.module';\r\nimport { BzDialogModule } from 'blazing';\r\nimport { TranslateModule } from 'translate-ng';\r\nimport { TabsOrdineComponent } from './detail-ordine/tabs-ordine/tabs-ordine.component';\r\nimport { DialogListOrdineComponent } from '../dialog/dialog-list-ordine/dialog-list-ordine.component';\r\nimport { TabRigaOrdineComponent } from './detail-ordine/tabs-ordine/riga-ordine/tab-riga-ordine.component';\r\nimport { RigaOrdineModule } from '../riga-ordine/riga-ordine.module';\r\nimport { TabOrdineFigliComponent } from './detail-ordine/tabs-ordine/ordine-figli/tab-ordine-figli.component';\r\n\r\nconst COMPONENTS = [\r\n  ListOrdineComponent, \r\n  SearchOrdineComponent,\r\n  DetailOrdineComponent,\r\n  TabsOrdineComponent,\r\n    DialogListOrdineComponent,\r\n  TabRigaOrdineComponent,\r\n  TabOrdineFigliComponent,\r\n]\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  imports: [\r\n    CommonModule,\r\n    BzCardModule,\r\n    BzTableModule,\r\n    OrdineRoutingModule,\r\n    BzButtonModule,\r\n    BzInputModule,\r\n    ReactiveFormsModule,\r\n    BzDatePickerModule,\r\n    BzSwitchModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\tBzTooltipModule,\r\n    BzDropdownModule,\r\n    BzToastrModule,\r\n    BzErrorModule,\r\n    UtilityPipeModule,\r\n    BzDialogModule,\r\n    BzTabsetModule,\r\n    BzEventModule,\r\n\tTranslateModule,\r\n\tBzIconModule\r\n  ]\r\n})\r\nexport class OrdineModule { }\r\n\r\n\r\n","\r\nimport { Component, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IOrdine } from '../../ordine.interface';\r\nimport { getPrivileges, getPrivilegesEnum } from 'voila2-runtime-ng';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tabs-ordine',\r\n  templateUrl: './tabs-ordine.component.html',\r\n  styleUrls: ['./tabs-ordine.component.scss']\r\n})\r\nexport class TabsOrdineComponent implements OnChanges {\r\n\r\n public privileges: string[] = getPrivileges();\r\n\r\n  @Input()\r\n  public formGroup !: FormGroup;\r\n\r\n  @Input()\r\n  public entity !: IOrdine;\r\n\r\n  @Input()\r\n  public pageStatus !: string;\r\n\r\n \r\n\r\n  public get Privileges(): any {\r\n        return getPrivilegesEnum();\r\n    }\r\n   \r\n\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    this.manageEntityChanges(changes);\r\n    this.managePageSatutusChanges(changes);\r\n  }\r\n\r\n\r\n  private managePageSatutusChanges(changes: SimpleChanges) : void {\r\n    const pageStatusChanges: SimpleChange = changes.pageStatus;\r\n    if(pageStatusChanges)\r\n      this.pageStatus = pageStatusChanges?.currentValue;\r\n  }\r\n\r\n  private manageEntityChanges(changes: SimpleChanges): void {\r\n    const entityChanges: SimpleChange = changes.entity;\r\n    if(entityChanges?.currentValue) {\r\n      this.entity = entityChanges.currentValue;\r\n    }\r\n  }\r\n \r\n\r\n}\r\n\r\n\r\n\r\n","\r\n<bz-tabset>\r\n\t<!--  Tab riga ordine -->\r\n    <bz-tab tabTitle=\"RIGA ORDINE \" *ngIf=\"Privileges?.ORDINE_FIND_BY_THE_RIGA_ORDINE_OBJECT_KEY | hasPermission: privileges\">\r\n       <app-tab-riga-ordine [formGroup]=\"formGroup\"  [entity]=\"entity\" [pageStatus]=\"pageStatus\"  [readonly]=\"false\"  ></app-tab-riga-ordine>\r\n    </bz-tab>\r\n\r\n\t<!--  Tab ordine figli -->\r\n    <bz-tab tabTitle=\"ORDINE FIGLI \" *ngIf=\"Privileges?.ORDINE_FIND_BY_THE_ORDINE_FIGLI_OBJECT_KEY | hasPermission: privileges\">\r\n       <app-tab-ordine-figli [formGroup]=\"formGroup\"  [entity]=\"entity\" [pageStatus]=\"pageStatus\"  [readonly]=\"false\"  ></app-tab-ordine-figli>\r\n    </bz-tab>\r\n\r\n</bz-tabset>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DateService } from 'blazing';\r\nimport { OrdineGroupApiService } from '../../ordine-group-api.service';\r\nimport {\r\n IntegerFilter\r\n, LocalDateFilter\r\n, BooleanFilter,\r\ngetListForDropdown\r\n} from 'voila2-runtime-ng';\r\n\r\nimport { OrdineCriteria } from '../../ordine.criteria';\r\n\r\nimport { ICliente } from '../../../cliente/cliente.interface';\r\nimport { ClienteApiService } from '../../../cliente/cliente-api.service';\r\nimport { ITipoOrdine } from '../../../tipo-ordine/tipo-ordine.interface';\r\nimport { TipoOrdineApiService } from '../../../tipo-ordine/tipo-ordine-api.service';\r\nimport { IOrdine } from '../../../ordine/ordine.interface';\r\n\r\nconst PROVIDERS = [\r\n  OrdineGroupApiService,\r\n  \r\n  ClienteApiService,\r\n  TipoOrdineApiService,\r\n]\r\n\r\n@Component({\r\n  selector: 'app-search-ordine',\r\n  templateUrl: './search-ordine.component.html',\r\n  styleUrls: ['./search-ordine.component.scss'],\r\n  providers: [...PROVIDERS ]\r\n})\r\nexport class SearchOrdineComponent implements OnInit {\r\n\r\n  public searchOrdineForm !: FormGroup;\r\n  public clienteList : ICliente[] = [];\r\n  public tipoOrdineList : ITipoOrdine[] = [];\r\n  public ordineList : IOrdine[] = [];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private ordineGroupApiService : OrdineGroupApiService,\r\n\t\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inizialize();\r\n       this.getParentsList();\r\n  }\r\n\r\n  public search(): any {\r\n    let ordineCriteria: OrdineCriteria = Object.assign({});\r\n\r\n    if (this.searchOrdineForm.value) {\r\n\r\n\t\tconst idOrdineFrom : number = this.searchOrdineForm.value.idOrdineFrom;\r\n\t\tconst idOrdineTo : number =  this.searchOrdineForm.value.idOrdineTo;\r\n\t\t\r\n\t\t//idOrdine\r\n\t\tif(idOrdineFrom || idOrdineTo ){\r\n\t\t\tordineCriteria.idOrdine = new IntegerFilter;\r\n\t\t    ordineCriteria.idOrdine.setGreaterOrEqualThan(idOrdineFrom);\r\n\t\t    ordineCriteria.idOrdine.setLessOrEqualThan(idOrdineTo);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tconst annoFrom : number = this.searchOrdineForm.value.annoFrom;\r\n\t\tconst annoTo : number =  this.searchOrdineForm.value.annoTo;\r\n\t\t\r\n\t\t//anno\r\n\t\tif(annoFrom || annoTo ){\r\n\t\t\tordineCriteria.anno = new IntegerFilter;\r\n\t\t    ordineCriteria.anno.setGreaterOrEqualThan(annoFrom);\r\n\t\t    ordineCriteria.anno.setLessOrEqualThan(annoTo);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tconst dataOrdineFrom : Date = this.searchOrdineForm.value.dataOrdineFrom;\r\n\t\tconst dataOrdineTo : Date =  this.searchOrdineForm.value.dataOrdineTo;\r\n\t\t\r\n\t\t//dataOrdine\r\n\t\tif(dataOrdineFrom || dataOrdineTo ){\r\n\t\t\tordineCriteria.dataOrdine = new LocalDateFilter;\r\n\t\t    ordineCriteria.dataOrdine.setGreaterOrEqualThan(dataOrdineFrom);\r\n\t\t    ordineCriteria.dataOrdine.setLessOrEqualThan(dataOrdineTo);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tconst urgente : boolean = this.searchOrdineForm.value.urgente;\r\n\t\t\r\n\t\t//urgente\r\n\t\tif(urgente){\r\n\t\t\tordineCriteria.urgente = new BooleanFilter();\r\n\t\t\tordineCriteria.urgente.setSpecified(urgente);\r\n\t\t}\r\n\t\t\r\n\t\t// theClienteObjectKey\r\n\t\tif(this.searchOrdineForm.value.theClienteObjectKey)\r\n\t\t{\r\n\t\t\tordineCriteria.theClienteObjectKey = this.searchOrdineForm.value.theClienteObjectKey;\r\n\t\t}\r\n\t\t// theTipoOrdineObjectKey\r\n\t\tif(this.searchOrdineForm.value.theTipoOrdineObjectKey)\r\n\t\t{\r\n\t\t\tordineCriteria.theTipoOrdineObjectKey = this.searchOrdineForm.value.theTipoOrdineObjectKey;\r\n\t\t}\r\n\t\t// theOrdinePadreObjectKey\r\n\t\tif(this.searchOrdineForm.value.theOrdinePadreObjectKey)\r\n\t\t{\r\n\t\t\tordineCriteria.theOrdinePadreObjectKey = this.searchOrdineForm.value.theOrdinePadreObjectKey;\r\n\t\t}\r\n    }\r\n\r\n    return ordineCriteria;\r\n  }\r\n\r\n  public inizialize(): void {\r\n    this.searchOrdineForm = this.formBuilder.group(\r\n      {\r\n\t\t\t'idOrdineFrom' : [null],\r\n\t\t\t'idOrdineTo' : [null],\r\n\t\t\t'annoFrom' : [null],\r\n\t\t\t'annoTo' : [null],\r\n\t\t\t'dataOrdineFrom' : [null],\r\n\t\t\t'dataOrdineTo' : [null],\r\n\t\t\t'urgente' : [null],\r\n\t\t\t'theClienteObjectKey' : [null]\r\n,\t\t\t'theTipoOrdineObjectKey' : [null]\r\n,\t\t\t'theOrdinePadreObjectKey' : [null]\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n   public getClienteList() : void {\r\n      this.ordineGroupApiService.cliente.getClienteByCriteria().subscribe(\r\n         (data) => {\r\n              this.clienteList = getListForDropdown('cliente', data);\r\n           }\r\n         )\r\n       }\r\n   public getTipoOrdineList() : void {\r\n      this.ordineGroupApiService.tipoOrdine.getTipoOrdineByCriteria().subscribe(\r\n         (data) => {\r\n              this.tipoOrdineList = getListForDropdown('tipoOrdine', data);\r\n           }\r\n         )\r\n       }\r\n   public getOrdineList() : void {\r\n      this.ordineGroupApiService.ordine.getOrdineByCriteria().subscribe(\r\n         (data) => {\r\n              this.ordineList = getListForDropdown('ordine', data);\r\n           }\r\n         )\r\n       }\r\n\r\n     private getParentsList() : void {\r\n        this.getClienteList();\r\n        this.getTipoOrdineList();\r\n        this.getOrdineList();\r\n     }\r\n\r\n\r\n}\r\n\r\n","\r\n\t<bz-card class=\"card\" isCollapsable>\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n        {{ 'header.search' | translate }}\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\r\n\t    <form [formGroup]=\"searchOrdineForm\">\r\n\t\t\r\n\t\r\n\t        <!-- Id Ordine -->\r\n\t        <div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t<bz-input label=\"Id Ordine da\" placeholder=\"da\" formControlName=\"idOrdineFrom\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t            <div class=\"fk-col-8\">\r\n\t                <bz-input label=\"Id Ordine a\" placeholder=\"a\" formControlName=\"idOrdineTo\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t        </div>\r\n\t\r\n\t\r\n\t        <!-- Anno -->\r\n\t        <div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t<bz-input label=\"Anno da\" placeholder=\"da\" formControlName=\"annoFrom\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t            <div class=\"fk-col-8\">\r\n\t                <bz-input label=\"Anno a\" placeholder=\"a\" formControlName=\"annoTo\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t        </div>\r\n\t\r\n\t\r\n\t        <!-- Data Ordine -->\r\n\t        <div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t <bz-date-picker label=\"Data Ordine da\" placeholder=\"da\" controlName=\"dataOrdineFrom\" (keyup.enter)=\"search()\"></bz-date-picker>\r\n\t            </div>\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t <bz-date-picker label=\"Data Ordine a\" placeholder=\"a\" controlName=\"dataOrdineTo\" (keyup.enter)=\"search()\" ></bz-date-picker>\r\n\t            </div>\r\n\t        </div>\r\n\t\r\n\t\r\n\t        <!-- Urgente -->\r\n\t        <div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t <bz-switch formControlName=\"urgente\" (keyup.enter)=\"search()\" >Urgente</bz-switch>\r\n\t            </div>\r\n\t            <div class=\"fk-col-8\">\r\n\t            </div>\r\n\t        </div>\r\n\t\r\n\t\r\n\t\t\t<div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t  <bz-dropdown label=\"Cliente\" [options]=\"clienteList\" optionLabel=\"objectTitle\" optionValue=\"objectKey\" formControlName=\"theClienteObjectKey\">\r\n                    <bz-error></bz-error>\r\n                  </bz-dropdown>\r\n\t\t\t\t</div>\r\n\t        </div>\r\n\r\n\r\n\t\t\t<div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t  <bz-dropdown label=\"TipoOrdine\" [options]=\"tipoOrdineList\" optionLabel=\"objectTitle\" optionValue=\"objectKey\" formControlName=\"theTipoOrdineObjectKey\">\r\n                    <bz-error></bz-error>\r\n                  </bz-dropdown>\r\n\t\t\t\t</div>\r\n\t        </div>\r\n\r\n\r\n\t\t\t<div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t  <bz-dropdown label=\"Ordine\" [options]=\"ordineList\" optionLabel=\"objectTitle\" optionValue=\"objectKey\" formControlName=\"theOrdinePadreObjectKey\">\r\n                    <bz-error></bz-error>\r\n                  </bz-dropdown>\r\n\t\t\t\t</div>\r\n\t        </div>\r\n\r\n\r\n\t\t \r\n\t    </form>\r\n\t</bz-card-content>\r\n</bz-card>\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}