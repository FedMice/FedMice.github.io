{"version":3,"sources":["./src/app/pages/voila2sample-ms-demo-fe/riga-ordine/riga-ordine-form.ts","./src/app/pages/voila2sample-ms-demo-fe/riga-ordine/riga-ordine-api.service.ts","./src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-prodotto/dialog-list-prodotto.component.ts","./src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-prodotto/dialog-list-prodotto.component.html","./src/app/pages/voila2sample-ms-demo-fe/prodotto/prodotto-api.service.ts"],"names":[],"mappings":"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","file":"default~ordine-ordine-module~prodotto-prodotto-module.js","sourcesContent":["\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\n\r\nexport function rigaOrdineForm(formBuilder: FormBuilder) {\r\n     return formBuilder.group({ \r\n          rigaOrdineKey : formBuilder.group({\r\n\t              idOrdine : [null],\r\n\t              anno : [null],\r\n              theOrdineObjectKey: [null, Validators.required],\r\n                  idProdotto: [null],\r\n          \t      theProdottoObjectKey: [null, Validators.required],\r\n          }),\r\n\t\t      quantita :  [null],\r\n      \r\n\r\n     })\r\n }\r\n \r\n","\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { DateService } from \"blazing\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BaseApiService } from \"../../../shared/base/base-api.service\";\r\nimport { ApiListResponse, ApiResponse } from \"voila2-runtime-ng\";\r\nimport { IRigaOrdine, IRigaOrdineDto } from \"./riga-ordine.interface\";\r\n\r\n\r\n@Injectable()\r\nexport class RigaOrdineApiService extends BaseApiService<IRigaOrdine, IRigaOrdineDto>{\r\n\r\n\r\n  private url: string = \"demo/riga-ordine\";\r\n  \r\n\r\n  constructor(httpClient: HttpClient, dateService: DateService) { super(httpClient, dateService) }\r\n\r\n  public getRigaOrdineByCriteria(options?: HttpParams): Observable<ApiListResponse<IRigaOrdine,IRigaOrdineDto>> {\r\n    return this.getEntityListByCriteria(this.url, options);\r\n  }\r\n\r\n  public addRigaOrdine(rigaOrdine: IRigaOrdine) : Observable<ApiResponse<IRigaOrdine>> {\r\n    const fixedRigaOrdine: IRigaOrdine = this.stringifyDate(rigaOrdine, 'dataRigaOrdine');\r\n    return this.addEntityInstance(fixedRigaOrdine, this.url);\r\n  }\r\n\r\n  public getRigaOrdineById(id: string) : Observable<ApiResponse<IRigaOrdine>> {\r\n    return this.getEntityInstanceById(id, this.url).pipe(\r\n      map( (rigaOrdineResult: ApiResponse<IRigaOrdine>) => {return this.convertIntoDate(rigaOrdineResult,'dataRigaOrdine')}))\r\n  }\r\n\r\n  public updateRigaOrdine(rigaOrdine: IRigaOrdine) : Observable<ApiResponse<IRigaOrdine>> {\r\n    const fixedRigaOrdine: IRigaOrdine = this.stringifyDate(rigaOrdine, 'dataRigaOrdine');\r\n    return this.updateEntityInstance(fixedRigaOrdine, this.url);\r\n  }\r\n\r\n  public deleteRigaOrdine(id: string) : Observable<ApiResponse<IRigaOrdine>> {\r\n    return this.deleteEntityInstance(id,this.url);\r\n  }\r\n\r\n\r\n  public getListRigaOrdineByLink(link: string, options?: HttpParams): Observable<any> {\r\n    return this.getEntityListByLink(link, options );\r\n  }\r\n\r\n  public printPdfReport(id: string): any {\r\n        window.open(this.baseUrl + \"/\" + this.url + '/pdf/' + id);\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { BzDialogService, CardSize, PaginationUtils } from 'blazing';\r\nimport { IProdotto, IProdottoDto } from '../../prodotto/prodotto.interface';\r\nimport { ProdottoApiService } from '../../prodotto/prodotto-api.service';\r\nimport { BaseComponent } from 'src/app/shared/base/base.component';\r\nimport { ButtonService } from 'src/app/utilities/services/buttons.service';\r\nimport { extractResponse, extractTotalPages } from 'voila2-runtime-ng';\r\n\r\nconst PROVIDERS = [\r\n  ProdottoApiService,\r\n  ButtonService\r\n]\r\n\r\n@Component({\r\n  selector: 'app-dialog-list-prodotto',\r\n  templateUrl: './dialog-list-prodotto.component.html',\r\n  styleUrls: ['./dialog-list-prodotto.component.scss'],\r\n  providers: [...PROVIDERS]\r\n})\r\nexport class DialogListProdottoComponent extends BaseComponent<IProdotto, IProdottoDto>  {\r\n\r\n  public prodottoList: IProdotto[] = [];\r\n  public totalPages: number = 0;\r\n  public spinner = true;\r\n  public pageSize = 5;\r\n  public cardSize= CardSize.LARGE\r\n\r\n constructor(\r\n    private prodottoApiService: ProdottoApiService,\r\n    public buttonsService: ButtonService,\r\n    private dialogService: BzDialogService\r\n    ) { super()}\r\n\r\n \r\n public paginateTable(object: any, criteria?: any): void {\r\n   const options: HttpParams = PaginationUtils.setOptionsForSpring(object, criteria);\r\n   this.prodottoApiService.getProdottoByCriteria(options).subscribe(\r\n     (data:any) => {\r\n       this.prodottoList = extractResponse('prodotto', data);\r\n       this.totalPages = extractTotalPages(data);\r\n       this.spinner = false;\r\n     },\r\n     () => {\r\n       this.spinner = false;\r\n     }\r\n   )\r\n\r\n }\r\n\r\n\r\n public selectElement( prodotto: IProdotto) : void {\r\n   this.dialogService.closeDialog(prodotto);\r\n }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","\r\n<bz-card [bzSpinner]=\"spinner\" [size]=\"cardSize\" global>\r\n\r\n   <!-- {{ 'header.list' | translate }} prodotto -->\r\n    <bz-card-header>\r\n         prodotto {{ 'header.list' | translate }}\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\r\n\t    <bz-table [sources]=\"prodottoList\" [pageSize]=\"pageSize\" [nVisiblePages]=\"3\" [totalPages]=\"totalPages\"\r\n\t        (pageObject)=\"paginateTable($event, null)\" paginatedBe>\r\n\t\r\n\t        <!-- idProdotto -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"idProdotto\"> idProdotto </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.idProdotto}} \r\n\t        </td>\r\n\t        <!-- descrizioneProdotto -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"descrizioneProdotto\"> descrizioneProdotto </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.descrizioneProdotto}} \r\n\t        </td>\r\n\t        <!-- prezzoUnitario -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"prezzoUnitario\"> prezzoUnitario </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.prezzoUnitario}} \r\n\t        </td>\r\n\t        <!-- dataScadenza -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"dataScadenza\"> dataScadenza </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.dataScadenza}} \r\n\t        </td>\r\n\t        <!-- limitedEdition -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"limitedEdition\"> limitedEdition </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.limitedEdition}} \r\n\t        </td>\r\n\t        <!-- createdBy -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"createdBy\"> createdBy </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.createdBy}} \r\n\t        </td>\r\n\t        <!-- lastModifiedBy -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"lastModifiedBy\"> lastModifiedBy </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.lastModifiedBy}} \r\n\t        </td>\r\n\t        <!-- createdDate -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"createdDate\"> createdDate </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.createdDate}} \r\n\t        </td>\r\n\t        <!-- lastModifiedDate -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"lastModifiedDate\"> lastModifiedDate </th>\r\n\t        <td *bzColumnDef=\"let element\" class=\"fk-pointer\"  (click)=\"selectElement(element)\"> \r\n\t           {{element.lastModifiedDate}} \r\n\t        </td>\r\n\t        <ng-container bzTableNoValue> {{ 'label.noElements' | translate }} Prodotto </ng-container>\r\n\t    </bz-table>\r\n\r\n\t</bz-card-content>\r\n\r\n</bz-card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { DateService } from \"blazing\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BaseApiService } from \"../../../shared/base/base-api.service\";\r\nimport { ApiListResponse, ApiResponse } from \"voila2-runtime-ng\";\r\nimport { IProdotto, IProdottoDto } from \"./prodotto.interface\";\r\n\r\n\r\n@Injectable()\r\nexport class ProdottoApiService extends BaseApiService<IProdotto, IProdottoDto>{\r\n\r\n\r\n  private url: string = \"demo/prodotto\";\r\n  \r\n\r\n  constructor(httpClient: HttpClient, dateService: DateService) { super(httpClient, dateService) }\r\n\r\n  public getProdottoByCriteria(options?: HttpParams): Observable<ApiListResponse<IProdotto,IProdottoDto>> {\r\n    return this.getEntityListByCriteria(this.url, options);\r\n  }\r\n\r\n  public addProdotto(prodotto: IProdotto) : Observable<ApiResponse<IProdotto>> {\r\n    return this.addEntityInstance(prodotto, this.url);\r\n  }\r\n\r\n  public getProdottoById(id: string) : Observable<ApiResponse<IProdotto>> {\r\n    return this.getEntityInstanceById(id, this.url)\r\n  }\r\n\r\n  public updateProdotto(prodotto: IProdotto) : Observable<ApiResponse<IProdotto>> {\r\n    return this.updateEntityInstance(prodotto, this.url);\r\n  }\r\n\r\n  public deleteProdotto(id: string) : Observable<ApiResponse<IProdotto>> {\r\n    return this.deleteEntityInstance(id,this.url);\r\n  }\r\n\r\n\r\n  public getListProdottoByLink(link: string, options?: HttpParams): Observable<any> {\r\n    return this.getEntityListByLink(link, options );\r\n  }\r\n\r\n  public printPdfReport(id: string): any {\r\n        window.open(this.baseUrl + \"/\" + this.url + '/pdf/' + id);\r\n    }\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}