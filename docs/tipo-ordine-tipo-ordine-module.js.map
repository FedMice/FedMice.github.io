{"version":3,"sources":["./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine-routing.module.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine.model.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine-form.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine.constant.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine-group-api.service.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/tipo-ordine.module.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/detail-tipo-ordine/tabs-tipo-ordine/ordine/tab-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/detail-tipo-ordine/tabs-tipo-ordine/ordine/tab-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/detail-tipo-ordine/tabs-tipo-ordine/tabs-tipo-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/detail-tipo-ordine/tabs-tipo-ordine/tabs-tipo-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/list-tipo-ordine/list-tipo-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/list-tipo-ordine/list-tipo-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/list-tipo-ordine/search-tipo-ordine/search-tipo-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/list-tipo-ordine/search-tipo-ordine/search-tipo-ordine.component.html","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/detail-tipo-ordine/detail-tipo-ordine.component.ts","./src/app/pages/voila2sample-ms-demo-fe/tipo-ordine/detail-tipo-ordine/detail-tipo-ordine.component.html"],"names":[],"mappings":"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","file":"tipo-ordine-tipo-ordine-module.js","sourcesContent":["\r\n\r\n\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { getAuthGuards } from \"src/app/security/security.config\";\r\nimport { AuthGuard, getPrivilegesEnum } from 'voila2-runtime-ng';\r\nimport { DetailTipoOrdineComponent } from \"./detail-tipo-ordine/detail-tipo-ordine.component\";\r\nimport { ListTipoOrdineComponent } from \"./list-tipo-ordine/list-tipo-ordine.component\";\r\n\r\nconst Privileges = getPrivilegesEnum();\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      children: [\r\n        {\r\n            path:'list-tipo-ordine', \r\n            component: ListTipoOrdineComponent,\r\n            canActivate: getAuthGuards(), \r\n            data: {privileges: [ Privileges.TIPO_ORDINE_FIND_PAGINATED ]}\r\n        },\r\n        {\r\n           path: 'detail-tipo-ordine/new', \r\n           component: DetailTipoOrdineComponent,\r\n           canActivate: getAuthGuards(),\r\n           data: {pageSatus: 'new', privileges: [ Privileges.TIPO_ORDINE_CREATE ]}\r\n        },\r\n        {\r\n          path: 'detail-tipo-ordine/:id/view', \r\n          component: DetailTipoOrdineComponent,\r\n          canActivate: getAuthGuards(), \r\n          data: {pageSatus: 'view', privileges: [ Privileges.TIPO_ORDINE_FIND_BY_ID ]}\r\n        },\r\n        {\r\n          path: 'detail-tipo-ordine/:id/edit', \r\n          component: DetailTipoOrdineComponent,\r\n          canActivate: getAuthGuards(), \r\n          data: {pageSatus: 'edit', privileges: [ Privileges.TIPO_ORDINE_UPDATE ]}\r\n        }\r\n      ]\r\n    }\r\n   \r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class TipoOrdineRoutingModule { }\r\n\r\n\r\n","\r\nimport { BaseModel } from \"../../../shared/base/base.model\";\r\nimport { BzAutoMapper, BzStringBuilder } from \"blazing\";\r\n\r\n\r\nimport { ITipoOrdineLinks, ITipoOrdine, \r\n  } from \"./tipo-ordine.interface\";\r\n\r\nexport class TipoOrdine extends BaseModel {\r\nidTipoOrdine !: number\r\nnomeTipoOrdine !: string\r\n   _links !: ITipoOrdineLinks;\r\n    \r\n   constructor(tipoordine: ITipoOrdine) {super(), this.mapEntity(tipoordine)}\r\n\r\n    /**\r\n     * Get TipoOrdine objectKey.\r\n     * \r\n     * @returns \r\n     */\r\n    public getObjectKey() : string {\r\n      const bzStringBuilder: BzStringBuilder = new BzStringBuilder();\r\n      const builder = bzStringBuilder\r\n\r\n .append(this.idTipoOrdine)\r\n       return builder.value;\r\n    }\r\n    \r\n    /**\r\n     * Map entity to model.\r\n     * \r\n     * @param prodotto \r\n     */\r\n     private mapEntity(tipoordine: ITipoOrdine) : void {\r\n        if(tipoordine) {\r\n            const bzAutoMapper: BzAutoMapper = BzAutoMapper.getInstance();\r\n            bzAutoMapper.map('TipoOrdine', 'ITipoOrdine', tipoordine, this);\r\n        }\r\n     }\r\n}\r\n\r\n\r\n","\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\n\r\nexport function tipoOrdineForm(formBuilder: FormBuilder) {\r\n     return formBuilder.group({ \r\n               idTipoOrdine :  [null],\r\n               nomeTipoOrdine :  [null],\r\n    \ttheOrdine: [[]],\r\n      \r\n\r\n     })\r\n }\r\n \r\n","\r\nexport const tipoOrdine_ = {\r\n    detail : {\r\n         toast: {\r\n             SUCCESS_INSERT: 'TipoOrdine aggiunto con successo',\r\n             SUCCESS_DELETE: 'TipoOrdine eliminato con successo',\r\n             SUCCESS_UPDATE: 'TipoOrdine aggiornato con successo'\r\n         },\r\n         relLink: {\r\n    \tTHE_ORDINE: 'theOrdine',\r\n        },\r\n        dialog: {\r\n            DELETE_MESSAGE: \"Sei sicuro di voler cancellare tipoOrdine ?\"\r\n        },\r\n        path: {\r\n            LIST: '/pages/ms-demo/tipo-ordine/list-tipo-ordine'\r\n        }\r\n    },\r\n    \r\n}\r\n\r\n \r\n","\r\n import { Injectable, Injector} from \"@angular/core\";\r\n import { TipoOrdineApiService } from './tipo-ordine-api.service';\r\n\r\n@Injectable() \r\nexport class TipoOrdineGroupApiService {\r\n\r\n     private tipoOrdineApiService !: TipoOrdineApiService;\r\n\r\n    constructor(private injector: Injector){}\r\n\r\n     get tipoOrdine(): TipoOrdineApiService {\r\n        if(!this.tipoOrdineApiService)\r\n           this.tipoOrdineApiService = this.injector.get(TipoOrdineApiService);\r\n        return this.tipoOrdineApiService;\r\n     }\r\n\r\n\r\n   \r\n}\r\n\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListTipoOrdineComponent } from './list-tipo-ordine/list-tipo-ordine.component';\r\nimport { BzButtonModule, BzCardModule, BzDatePickerModule, BzDropdownModule, \r\n  BzErrorModule, BzEventModule, BzIconModule,\r\n  BzInputModule,\r\n BzSwitchModule, BzTableModule, BzTabsetModule, BzToastrModule, BzTooltipModule } from 'blazing';\r\nimport { TipoOrdineRoutingModule } from './tipo-ordine-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SearchTipoOrdineComponent } from './list-tipo-ordine/search-tipo-ordine/search-tipo-ordine.component';\r\nimport { DetailTipoOrdineComponent } from './detail-tipo-ordine/detail-tipo-ordine.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { UtilityPipeModule } from '../../../utilities/pipe/utility-pipe.module';\r\nimport { BzDialogModule } from 'blazing';\r\nimport { TranslateModule } from 'translate-ng';\r\nimport { TabsTipoOrdineComponent } from './detail-tipo-ordine/tabs-tipo-ordine/tabs-tipo-ordine.component';\r\nimport { DialogListTipoOrdineComponent } from '../dialog/dialog-list-tipo-ordine/dialog-list-tipo-ordine.component';\r\nimport { TabOrdineComponent } from './detail-tipo-ordine/tabs-tipo-ordine/ordine/tab-ordine.component';\r\nimport { OrdineModule } from '../ordine/ordine.module';\r\n\r\nconst COMPONENTS = [\r\n  ListTipoOrdineComponent, \r\n  SearchTipoOrdineComponent,\r\n  DetailTipoOrdineComponent,\r\n  TabsTipoOrdineComponent,\r\n    DialogListTipoOrdineComponent,\r\n  TabOrdineComponent,\r\n]\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  imports: [\r\n    CommonModule,\r\n    BzCardModule,\r\n    BzTableModule,\r\n    TipoOrdineRoutingModule,\r\n    BzButtonModule,\r\n    BzInputModule,\r\n    ReactiveFormsModule,\r\n    BzDatePickerModule,\r\n    BzSwitchModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\tBzTooltipModule,\r\n    BzDropdownModule,\r\n    BzToastrModule,\r\n    BzErrorModule,\r\n    UtilityPipeModule,\r\n    BzDialogModule,\r\n    BzTabsetModule,\r\n    BzEventModule,\r\n\tTranslateModule,\r\n\tBzIconModule\r\n  ]\r\n})\r\nexport class TipoOrdineModule { }\r\n\r\n\r\n","\r\nimport { Component, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BzDialogService, PageObject } from 'blazing';\r\nimport { OrdineApiService } from 'src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-api.service';\r\nimport { ordineForm } from 'src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-form';\r\nimport { IOrdine } from 'src/app/pages/voila2sample-ms-demo-fe/ordine/ordine.interface';\r\nimport { DialogListClienteComponent } from 'src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-cliente/dialog-list-cliente.component';\r\nimport { DialogListOrdineComponent } from 'src/app/pages/voila2sample-ms-demo-fe/dialog/dialog-list-ordine/dialog-list-ordine.component';\r\nimport { BaseTabComponent } from 'src/app/shared/base/base-tab.component';\r\nimport { fillOptions } from 'src/app/shared/base/base.helper';\r\nimport { extractResponse, extractTotalPages, setControl } from 'voila2-runtime-ng';\r\nimport { ITipoOrdine } from '../../../tipo-ordine.interface';\r\n\r\n@Component({\r\n  selector: 'app-tab-ordine',\r\n  templateUrl: './tab-ordine.component.html',\r\n  styleUrls: ['./tab-ordine.component.scss'],\r\n  providers: [OrdineApiService]\r\n})\r\nexport class TabOrdineComponent extends BaseTabComponent<ITipoOrdine> implements OnChanges {\r\n\r\n\r\n  public theOrdine !: FormArray;\r\n  public theOrdineList !: AbstractControl[];\r\n  public ordineList: IOrdine[] = []\r\n  public form: FormGroup = ordineForm(this.formBuilder);\r\n  public smartFormGroup: FormGroup = this.formBuilder.group({});\r\n\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ordineApiService: \r\n     OrdineApiService,\r\n    private dialogService: BzDialogService\r\n  ) { super() }\r\n\r\n\r\n\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    this.manageEntityChanges(changes);\r\n    this.managePageStatusChanges(changes);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Paginate table.\r\n   * \r\n   */\r\n  public paginateTable(object: any): void {\r\n    let options = fillOptions(this.pageStatus, object);\r\n    if (this.theEntitylink) {\r\n      this.ordineApiService.getListOrdineByLink(this.theEntitylink, options).subscribe(\r\n        (data: any) => {\r\n          this.ordineList = extractResponse('ordine', data);\r\n          this.totalPages = extractTotalPages(data);\r\n          this.spinner = false;\r\n        },\r\n        () => {\r\n          this.spinner = false;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  public getSmartArray(smartArray: any): void {\r\n    if (this.smartFormGroup.valid || this.smartFormGroup.status === \"DISABLED\") {\r\n      setControl(this.formGroup,'theOrdine', smartArray);\r\n    }\r\n  }\r\n\r\n\r\n  public showClienteListDialog(index: number): void {\r\n    this.dialogService.showDialog(DialogListClienteComponent).subscribe(\r\n      (data) => {\r\n        if (data) {\r\n\t\t  \r\n          this.setSmartControlByIndex(this.smartFormGroup, index, data, 'objectKey', 'theClienteObjectKey');\r\n          \r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n  public showOrdineListDialog(index: number): void {\r\n    this.dialogService.showDialog(DialogListOrdineComponent).subscribe(\r\n      (data) => {\r\n        if (data) {\r\n\t\t  \r\n          this.setSmartControlByIndex(this.smartFormGroup, index, data, 'objectKey', 'theOrdinePadreObjectKey');\r\n          \r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  private managePageStatusChanges(changes: SimpleChanges): void {\r\n    const pageStatusChanges: SimpleChange = changes.pageStatus;\r\n    if (pageStatusChanges?.currentValue) {\r\n      this.ordineList = [];\r\n      const object: PageObject = this.managePageStatus(pageStatusChanges, this.smartFormGroup);\r\n      this.paginateTable(object);\r\n    }\r\n  }\r\n\r\n  private manageEntityChanges(changes: SimpleChanges): void {\r\n    const entityChanges: SimpleChange = changes.entity;\r\n    if (entityChanges) {\r\n      this.entity = entityChanges.currentValue;\r\n      setControl(this.form,'theTipoOrdineObjectKey', this.entity?.objectKey);\r\n      this.theEntitylink = this.entity?._links.theOrdine?.href;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n<bz-card [bzSpinner]=\"spinner\" *ngIf=\"!(pageStatus | hasPageStatus: ['new','edit']) || readonly\">\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n         {{ 'header.list' | translate }}  Ordine\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\r\n\t    <!--  {{ 'header.detail' | translate }}  Ordine -->\r\n\t    <bz-table [sources]=\"ordineList\" [pageSize]=\"pageSize\" [nVisiblePages]=\"3\" [totalPages]=\"totalPages\"\r\n\t    (pageObject)=\"paginateTable($event)\" paginatedBe>\r\n\t       \r\n\t\r\n\t\r\n\t\r\n\t        <!-- IdOrdine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"idOrdine\" scope=\"col\"> IdOrdine </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.ordineKey.idOrdine}}</td>\r\n\t        <!-- Anno -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"anno\" scope=\"col\"> Anno </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.ordineKey.anno}}</td>\r\n\t        <!-- DataOrdine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"dataOrdine\" scope=\"col\"> DataOrdine </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.dataOrdine}}</td>\r\n\t        <!-- Urgente -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"urgente\" scope=\"col\"> Urgente </th>\r\n\t        <td *bzColumnDef=\"let element\"> {{element.urgente}}</td>\r\n\t\r\n\t         <!-- Cliente -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"theClienteObjectKey\" scope=\"col\"> Cliente </th>\r\n  <td *bzColumnDef=\"let element\"> {{element.theClienteObjectKey }}</td>\r\n\t         <!-- Invalid -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"theinvalidObjectKey\" scope=\"col\"> Invalid </th>\r\n  <td *bzColumnDef=\"let element\"> {{element.theinvalidObjectKey }}</td>\r\n\r\n\t        <ng-container bzTableNoValue>  {{ 'label.noElement' | translate }}  Ordine </ng-container>\r\n\t\r\n\t    </bz-table>\r\n\r\n\t</bz-card-content>\r\n\r\n</bz-card>\r\n\r\n\r\n\r\n<!-- Add Ordine -->\r\n<bz-card *ngIf=\"(pageStatus | hasPageStatus: ['new','edit']) && !readonly\">\r\n\r\n    <bz-card-header>\r\n         {{ 'header.list' | translate }}  Ordine\r\n    </bz-card-header>\r\n\r\n\t\t<bz-card-content>\r\n   \r\n\t\t <bz-table  [bzSmartTable]=\"ordineList\"  [bzFormGroup]=\"smartFormGroup\"  [bzDisabledControls]=\"['theClienteObjectKey']\"   [bzDisabledControls]=\"['theTipoOrdineObjectKey']\"   [bzDisabledControls]=\"['theOrdineObjectKey']\"  \r\n\t\t [bzForm]= \"form\"  (smartArray)=\"getSmartArray($event)\" withIndex paginated>\r\n\t\t        \r\n\t\t        <!-- Cliente -->\r\n\t\t        <th bzHeaderColumn class=\"prodotto-column-width\" scope=\"col\"> Cliente </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element.value\">\r\n                    <div formGroupName=\"ordineKey\"> \r\n\t\t          <bz-input formControlName=\"theClienteObjectKey\">\r\n\t\t\t\t\t\t<button bzInputButton status=\"primary\" (click)=\"showClienteListDialog(element.rowIndex)\">\r\n      \t\t\t\t\t\t<bz-icon iconName=\"fa fa-window-maximize\"></bz-icon>\r\n \t\t\t\t\t    </button>\t\t\t\r\n\t\t\t\t  </bz-input>\r\n                    </div>\r\n\t\t       \r\n\t\t        </td>\r\n\t\t         <!-- Ordine -->\r\n\t\t        <th bzHeaderColumn class=\"prodotto-column-width\" scope=\"col\"> OrdinePadre </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element.value\">\r\n\t\t          <bz-input formControlName=\"theOrdinePadreObjectKey\" (click)=\"showOrdineListDialog(element.rowIndex)\"></bz-input>\r\n\t\t          <bz-input formControlName=\"theOrdinePadreObjectKey\" (click)=\"showOrdineListDialog(element.rowIndex)\"></bz-input>\r\n\t\t\r\n\t\t\r\n\t\t        <!-- IdOrdine -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> IdOrdine </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"idOrdine\"></bz-input>\r\n\t\t        </td>\r\n\t\t        <!-- Anno -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> Anno </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"anno\"></bz-input>\r\n\t\t        </td>\r\n\t\t        <!-- DataOrdine -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> DataOrdine </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"dataOrdine\"></bz-input>\r\n\t\t        </td>\r\n\t\t        <!-- Urgente -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> Urgente </th>\r\n\t\t        <td *bzColumnDef=\"let element\" [formGroup]=\"element?.value\">\r\n\t\t            <bz-input formControlName=\"urgente\"></bz-input>\r\n\t\t        </td>\r\n\t\t\r\n\t\t        <!-- Remove Ordine -->\r\n\t\t        <th bzHeaderColumn scope=\"col\"> </th>\r\n\t\t        <td *bzColumnDef=\"let element\" >\r\n\t\t            <button  bzButton [bzRemoveRow]=\"element\" status=\"danger\"  >\r\n\t\t                {{ 'buttons.delete' | translate }} \r\n\t\t            </button>\r\n\t\t            <button  bzButton [bzRestoreRow]=\"element\" status=\"primary\"  >\r\n\t\t               {{ 'buttons.restore' | translate }} \r\n\t\t            </button>\r\n\t\t        </td>\r\n\t\t\r\n\t\t    \r\n\t\t        <ng-container >  {{ 'label.noElement' | translate }} Ordine </ng-container>\r\n\t\t\r\n\t\t        <button bzButton bzAddRow >{{ 'buttons.new' | translate }}  Ordine </button>\r\n\t\t\r\n\t\t    </bz-table>\r\n\r\n\t</bz-card-content>\t\t\t\r\n   \t\r\n</bz-card>\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { Component, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ITipoOrdine } from '../../tipo-ordine.interface';\r\nimport { getPrivileges, getPrivilegesEnum } from 'voila2-runtime-ng';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tabs-tipo-ordine',\r\n  templateUrl: './tabs-tipo-ordine.component.html',\r\n  styleUrls: ['./tabs-tipo-ordine.component.scss']\r\n})\r\nexport class TabsTipoOrdineComponent implements OnChanges {\r\n\r\n public privileges: string[] = getPrivileges();\r\n public readonly: boolean = true;\r\n\r\n  @Input()\r\n  public formGroup !: FormGroup;\r\n\r\n  @Input()\r\n  public entity !: ITipoOrdine;\r\n\r\n  @Input()\r\n  public pageStatus !: string;\r\n\r\n \r\n\r\n  public get Privileges(): any {\r\n        return getPrivilegesEnum();\r\n    }\r\n   \r\n\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    this.manageEntityChanges(changes);\r\n    this.managePageSatutusChanges(changes);\r\n  }\r\n\r\n\r\n  private managePageSatutusChanges(changes: SimpleChanges) : void {\r\n    const pageStatusChanges: SimpleChange = changes.pageStatus;\r\n    if(pageStatusChanges)\r\n      this.pageStatus = pageStatusChanges?.currentValue;\r\n  }\r\n\r\n  private manageEntityChanges(changes: SimpleChanges): void {\r\n    const entityChanges: SimpleChange = changes.entity;\r\n    if(entityChanges?.currentValue) {\r\n      this.entity = entityChanges.currentValue;\r\n    }\r\n  }\r\n \r\n\r\n}\r\n\r\n\r\n\r\n","\r\n<bz-tabset >\r\n\t<!--  Tab ordine -->\r\n    <bz-tab tabTitle=\"ORDINE \" *ngIf=\"(Privileges?.TIPOORDINE_FIND_BY_THE_ORDINE_OBJECT_KEY | hasPermission: privileges) && (pageStatus | isReadOnly : true) \">\r\n       <app-tab-ordine [formGroup]=\"formGroup\"  [entity]=\"entity\" [pageStatus]=\"pageStatus\"  [readonly]=\"true\"  ></app-tab-ordine>\r\n    </bz-tab>\r\n\r\n</bz-tabset>\r\n\r\n\r\n\r\n\r\n","import { HttpParams } from '@angular/common/http';\r\nimport {  Component, ViewChild } from '@angular/core';\r\nimport { PageObject, PaginationUtils } from 'blazing';\r\nimport { BaseComponent } from '../../../../shared/base/base.component';\r\nimport { ITipoOrdine , ITipoOrdineDto } from '../tipo-ordine.interface';\r\nimport { TipoOrdineApiService } from '../tipo-ordine-api.service';\r\nimport { ButtonService } from '../../../../utilities/services/buttons.service';\r\nimport { SearchTipoOrdineComponent } from './search-tipo-ordine/search-tipo-ordine.component';\r\nimport { Router } from '@angular/router';\r\nimport { extractResponse, extractTotalPages, navigateToPath, getPrivilegesEnum, getPrivileges } from 'voila2-runtime-ng';\r\n\r\n\r\n@Component({\r\n  selector: 'app-list-tipo-ordine',\r\n  templateUrl: './list-tipo-ordine.component.html',\r\n  styleUrls: ['./list-tipo-ordine.component.scss'],\r\n  providers:  [TipoOrdineApiService, ButtonService]\r\n})\r\nexport class ListTipoOrdineComponent extends BaseComponent<ITipoOrdine,ITipoOrdineDto>  {\r\n\r\n\r\n  public tipoOrdineList: ITipoOrdine [] =  [];\r\n  public tipoOrdine!: ITipoOrdine;\r\n  public totalPages: number = 0;\r\n  public spinner: boolean = true;\r\n  public tipoOrdineCriteria !: any;\r\n  public pageSize: number = 5;\r\n\r\n  public privileges: string[] = getPrivileges();\r\n  \r\n  public get Privileges(): any {\r\n    return  getPrivilegesEnum(); \r\n  }\r\n \r\n\r\n  @ViewChild(SearchTipoOrdineComponent)  searchTipoOrdine !: SearchTipoOrdineComponent;\r\n  \r\n\r\n  constructor(\r\n    private tipoOrdineApiService: TipoOrdineApiService,\r\n    public router: Router,\r\n  ) { super() }\r\n\r\n  \r\n  public paginateTable(object: any, criteria?: any): void {\r\n    const options: HttpParams = PaginationUtils.setOptionsForSpring(object, criteria);\r\n    this.tipoOrdineApiService.getTipoOrdineByCriteria(options).subscribe(\r\n      (data) => {\r\n        this.tipoOrdineList = extractResponse('tipoOrdine', data);\r\n        this.totalPages = extractTotalPages(data);\r\n        this.spinner = false;\r\n      },\r\n      () => {\r\n        this.spinner = false;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  public searchWithCriteria() : void {\r\tthis.tipoOrdineCriteria = this.searchTipoOrdine.search();\r\n     const object: PageObject  = { page: 0, pageSize: this.pageSize};\r\n     this.paginateTable(object, this.tipoOrdineCriteria);\r\n  }\r\n\r\n\r\n  public navigateToView(id: number) : void {\r\n   navigateToPath('/pages/ms-demo/tipo-ordine/detail-tipo-ordine/' + id + '/view', this.router);\r\n  }\r\n\r\n\t\r\n\r\n}\r\n\r\n","\r\n<bz-card [bzSpinner]=\"spinner\">\r\n\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n        Tipo Ordine {{ 'header.list' | translate }}\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\t\r\n\t    <!-- Tabella tipo tipoOrdine -->\r\n\t    <bz-table [sources]=\"tipoOrdineList\" [pageSize]=\"pageSize\" [nVisiblePages]=\"3\" [totalPages]=\"totalPages\"\r\n\t        (pageObject)=\"paginateTable($event, tipoOrdineCriteria)\" paginatedBe>\r\n\t\r\n\t\r\n\r\n\t\t\t\r\n\t\t\t<!-- Id tipoOrdine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"idTipoOrdine\" scope=\"col\" > Id Tipo Ordine </th>\r\n\t        <td *bzColumnDef=\"let tipoOrdine\"> \r\n\t            <div class=\"fk-pointer\" (click)=\"navigateToView(tipoOrdine.objectKey)\" >{{tipoOrdine.idTipoOrdine}}</div>  \r\n\t        </td>\r\n\r\n\t\t\t\r\n\t\r\n\t        \t<!-- Nome Tipo Ordine -->\r\n\t        <th bzHeaderColumn bzSortColumn=\"nomeTipoOrdine\" scope=\"col\" > Nome Tipo Ordine </th>\r\n\t        <td *bzColumnDef=\"let tipoOrdine\"> {{tipoOrdine.nomeTipoOrdine }}</td>\r\n\t\r\n\t\r\n\t        <ng-container bzTableNoValue> {{ 'label.noElements' | translate }} Tipo Ordine </ng-container>\r\n\r\n\t    </bz-table>\r\n\r\n\t</bz-card-content>\r\n\r\n</bz-card>\r\n\r\n<!-- Search with criteria -->\r\n<app-search-tipo-ordine></app-search-tipo-ordine>\r\n\r\n<!-- Buttons -->\r\n<bz-card class=\"card\">\r\n\t<bz-card-content>\r\n\t    <button bzButton status=\"primary\" class=\"button\" (click)=\"searchWithCriteria()\"> Cerca</button>\r\n\t    <button bzButton status=\"primary\" class=\"button\" *ngIf=\"Privileges?.TIPO_ORDINE_CREATE | hasPermission : privileges\"\r\n\t     routerLink=\"/pages/ms-demo/tipo-ordine/detail-tipo-ordine/new\" > {{ 'buttons.new' | translate }} </button>\r\n\t\t\r\n\t</bz-card-content>\r\n</bz-card>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DateService } from 'blazing';\r\nimport { TipoOrdineGroupApiService } from '../../tipo-ordine-group-api.service';\r\nimport {\r\n IntegerFilter\r\n, StringFilter\r\n, extractResponse\r\n} from 'voila2-runtime-ng';\r\n\r\nimport { TipoOrdineCriteria } from '../../tipo-ordine.criteria';\r\n\r\nconst PROVIDERS = [\r\n  TipoOrdineGroupApiService,\r\n  \r\n]\r\n\r\n@Component({\r\n  selector: 'app-search-tipo-ordine',\r\n  templateUrl: './search-tipo-ordine.component.html',\r\n  styleUrls: ['./search-tipo-ordine.component.scss'],\r\n  providers: [...PROVIDERS ]\r\n})\r\nexport class SearchTipoOrdineComponent implements OnInit {\r\n\r\n  public searchTipoOrdineForm !: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private tipoOrdineGroupApiService : TipoOrdineGroupApiService,\r\n\t\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inizialize();\r\n  }\r\n\r\n  public search(): any {\r\n    let tipoOrdineCriteria: TipoOrdineCriteria = Object.assign({});\r\n\r\n    if (this.searchTipoOrdineForm.value) {\r\n\r\n\t\tconst idTipoOrdineFrom : number = this.searchTipoOrdineForm.value.idTipoOrdineFrom;\r\n\t\tconst idTipoOrdineTo : number =  this.searchTipoOrdineForm.value.idTipoOrdineTo;\r\n\t\t\r\n\t\t//idTipoOrdine\r\n\t\tif(idTipoOrdineFrom || idTipoOrdineTo ){\r\n\t\t\ttipoOrdineCriteria.idTipoOrdine = new IntegerFilter;\r\n\t\t    tipoOrdineCriteria.idTipoOrdine.setGreaterOrEqualThan(idTipoOrdineFrom);\r\n\t\t    tipoOrdineCriteria.idTipoOrdine.setLessOrEqualThan(idTipoOrdineTo);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tconst nomeTipoOrdine : string = this.searchTipoOrdineForm.value.nomeTipoOrdine;\r\n\t\t\r\n\t\t//nomeTipoOrdine\r\n\t\tif(nomeTipoOrdine){\r\n\t\ttipoOrdineCriteria.nomeTipoOrdine = new StringFilter;\r\n\t\ttipoOrdineCriteria.nomeTipoOrdine.setContains(this.searchTipoOrdineForm.value.nomeTipoOrdine);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n    }\r\n\r\n    return tipoOrdineCriteria;\r\n  }\r\n\r\n  public inizialize(): void {\r\n    this.searchTipoOrdineForm = this.formBuilder.group(\r\n      {\r\n\t\t\t'idTipoOrdineFrom' : [null],\r\n\t\t\t'idTipoOrdineTo' : [null],\r\n\t\t\t'nomeTipoOrdine' : [null],\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","\r\n\t<bz-card class=\"card\" isCollapsable>\r\n    <!-- card header -->\r\n    <bz-card-header>\r\n        {{ 'header.search' | translate }}\r\n    </bz-card-header>\r\n\r\n\t<bz-card-content>\r\n\r\n\t    <form [formGroup]=\"searchTipoOrdineForm\">\r\n\t\t\r\n\t\r\n\t        <!-- Id Tipo Ordine -->\r\n\t        <div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t<bz-input label=\"Id Tipo Ordine da\" placeholder=\"da\" formControlName=\"idTipoOrdineFrom\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t            <div class=\"fk-col-8\">\r\n\t                <bz-input label=\"Id Tipo Ordine a\" placeholder=\"a\" formControlName=\"idTipoOrdineTo\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t        </div>\r\n\t\r\n\t\r\n\t        <!-- Nome Tipo Ordine -->\r\n\t        <div class=\"fk-row inputs\">\r\n\t            <div class=\"fk-col-8\">\r\n\t\t\t\t\t<bz-input label=\"Nome Tipo Ordine\" formControlName=\"nomeTipoOrdine\" (keyup.enter)=\"search()\"></bz-input>\r\n\t            </div>\r\n\t            <div class=\"fk-col-8\">\r\n\t            </div>\r\n\t        </div>\r\n\t\r\n\t\r\n\t\t \r\n\t    </form>\r\n\t</bz-card-content>\r\n</bz-card>\r\n\r\n\r\n","\r\nimport {  Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup} from '@angular/forms';\r\nimport { ButtonService } from '../../../../utilities/services/buttons.service';\r\nimport { ITipoOrdine , ITipoOrdineDto } from '../tipo-ordine.interface';\r\nimport { TipoOrdineApiService } from '../tipo-ordine-api.service';\r\nimport { TipoOrdineGroupApiService } from '../tipo-ordine-group-api.service';\r\nimport { tipoOrdineForm} from '../tipo-ordine-form';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from '../../../../utilities/services/toastr.service';\r\nimport { RouteService } from '../../../../utilities/services/route.service';\r\nimport { ConfirmDialogService } from '../../../../utilities/dialog/confirm-dialog.service';\r\nimport { BaseComponent } from '../../../../shared/base/base.component';\r\nimport { PageStatus } from '../../../../utilities/enum/page-status.enum';\r\nimport { OverlaysService } from '../../../../utilities/services/overlays.service';\r\nimport { tipoOrdine_ } from '../tipo-ordine.constant';\r\nimport { Data } from '@angular/router';\r\nimport { ApiResponse, getIdFromPath,  isInViewEditMode,  navigateToPath, getListForDropdown,\r\n  getPrivilegesEnum, getPrivileges, extractResponse, isInNewMode} from \"voila2-runtime-ng\";\r\nimport { setTabObjectKey } from 'src/app/shared/base/base.helper';\r\nimport { TranslatePipe } from 'translate-ng';\r\nimport { TipoOrdine } from '../tipo-ordine.model';\r\n\r\nconst PROVIDERS = [\r\n  TipoOrdineApiService, \r\n  ButtonService,  \r\n  OverlaysService, \r\n  RouteService, \r\n  ConfirmDialogService,\r\n  TipoOrdineGroupApiService,\r\n]\r\n\r\n@Component({\r\n  selector: 'app-detail-tipo-ordine',\r\n  templateUrl: './detail-tipo-ordine.component.html',\r\n  styleUrls: ['./detail-tipo-ordine.component.scss'],\r\n  providers: [...PROVIDERS ]\r\n})\r\nexport class DetailTipoOrdineComponent extends BaseComponent<ITipoOrdine, ITipoOrdineDto> implements OnInit {\r\n\r\n  public tipoOrdineForm !: FormGroup;\r\n  public tipoOrdine !: ITipoOrdine;\r\n  public spinner: boolean = true;\r\n\r\n   public privileges: string[] = getPrivileges();\r\n  \r\n   public get Privileges(): any {\r\n    return  getPrivilegesEnum(); \r\n   }\r\n\r\n  constructor(\r\n    public buttonsService: ButtonService,\r\n    private formBuilder: FormBuilder,\r\n    private routeService: RouteService,\r\n    private overlaysService: OverlaysService,\r\n    private injector: Injector,\r\n    private tipoOrdineGroupApiService : TipoOrdineGroupApiService\r\n  ) { super()}\r\n\r\n  ngOnInit(): void {\r\n    this.tipoOrdineForm = tipoOrdineForm(this.formBuilder);\r\n    this.routeService.route.data.subscribe(\r\n      (data: Data) => {\r\n        this.pageStatus = data.pageSatus;\r\n      }\r\n    )\r\n    this.getTipoOrdineById();\r\n    this.setTabPageStatusOnInit();\r\n    if(isInNewMode(this.pageStatus))\r\n          this.spinner = false;\r\n  }\r\n\r\n\r\n  public insertTipoOrdine(): void {\r\n    const tipoOrdine: ITipoOrdine = this.tipoOrdineForm.value;\r\n setTabObjectKey( tipoOrdine, new TipoOrdine(tipoOrdine), 'theOrdine','theTipoOrdineObjectKey');\r\n\tthis.tipoOrdineGroupApiService.tipoOrdine.addTipoOrdine(tipoOrdine).subscribe(\r\n      (tipoOrdineResult: ApiResponse<ITipoOrdine>) => {\r\n         const toast: ToastrService = this.overlaysService.toast;\r\n        this.tipoOrdine = this.manageResponse(tipoOrdineResult, toast, new TranslatePipe(this.injector));\r\n        if(this.tipoOrdine)\r\n          navigateToPath('/pages/ms-demo/tipo-ordine/detail-tipo-ordine/' + this.tipoOrdine.objectKey + '/view', this.routeService.router);\r\n      }\r\n    )\r\n  }\r\n\r\n  public getTipoOrdineById(): void {\r\n    if (isInViewEditMode(this.pageStatus)) {\r\n      const id = getIdFromPath(this.routeService.route);\r\n      if (id) {\r\n        this.tipoOrdineGroupApiService.tipoOrdine.getTipoOrdineById(id).subscribe(\r\n          (tipoOrdineResult: ApiResponse<ITipoOrdine>) => {\r\n            this.tipoOrdine = tipoOrdineResult.response;\r\n            this.setTabPageStatus(this.pageStatus);\r\n            this.fillForm();\r\n            this.spinner = false;\r\n          },\r\n           () => {\r\n               this.spinner = false;\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  public fillForm(): void {\r\n    this.tipoOrdineForm.patchValue({\r\n               idTipoOrdine : this.tipoOrdine.idTipoOrdine,\r\n               nomeTipoOrdine : this.tipoOrdine.nomeTipoOrdine,\r\n\t\r\n      });\r\n  }\r\n\r\n\r\n  public editTipoOrdine(): void {\r\n    this.setStatusPage(PageStatus.EDIT, this.routeService.location);\r\n    this.getTipoOrdineById();\r\n  }\r\n\r\n\r\n  public updateTipoOrdine(): void {\r\n    const tipoOrdine: ITipoOrdine = this.tipoOrdineForm.value;\r\n    this.tipoOrdineGroupApiService.tipoOrdine.updateTipoOrdine(tipoOrdine).subscribe(\r\n      (tipoOrdineResult: ApiResponse<ITipoOrdine>) => {\r\n        const toast: ToastrService = this.overlaysService.toast;\r\n        this.tipoOrdine = this.manageResponse(tipoOrdineResult,toast, new TranslatePipe(this.injector));\r\n        if(this.tipoOrdine)\r\n          navigateToPath('/pages/ms-demo/tipo-ordine/detail-tipo-ordine/' + this.tipoOrdine.objectKey + '/view', this.routeService.router);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete tipoOrdine by id.\r\n   */\r\n  public deleteTipoOrdineById(): void {\r\n\t this.tipoOrdineGroupApiService.tipoOrdine.deleteTipoOrdine(this.tipoOrdine.objectKey).subscribe(\r\n      () => {\r\n        this.overlaysService.toast.showSuccess(tipoOrdine_.detail.toast.SUCCESS_DELETE);\r\n        navigateToPath(tipoOrdine_.detail.path.LIST, this.routeService.router);\r\n        this.overlaysService.dialog.closeDialog();\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Confirm delete tipoOrdine.\r\n   */\r\n  public confirmDeleteTipoOrdine() : void {\r\n    const message: string = tipoOrdine_.detail.dialog.DELETE_MESSAGE;\r\n    this.overlaysService.confirmDialog.openConfirmDialog(message).subscribe(\r\n      (isTrue: boolean) => {\r\n        if(isTrue)\r\n         this.deleteTipoOrdineById();\r\n      }\r\n    )\r\n  }\r\n\r\n \r\n\r\n\r\n  \r\n}\r\n\r\n\r\n\r\n","<form [formGroup]=\"tipoOrdineForm\">\r\n    <bz-card>\r\n        <bz-card-header> \r\n\t\t\t{{ 'header.detail' | translate }} Tipo Ordine\r\n \t\t\t<i bzTooltip=\"Tipologica degli ordini emessi\" class=\"fa fa-question-circle\"></i>\r\n\t\t</bz-card-header>\r\n\r\n\t\t<bz-card-content>\r\n\r\n\t        <ng-container *ngIf=\"pageStatus | hasPageStatus: ['new','edit']\">\r\n\r\n           \r\n                       \r\n                       <!-- Nome Tipo Ordine-->\r\n                       \t            <div class=\"fk-row inputs\">\r\n                       \t                <div class=\"fk-col-8\">\r\n                       \t\t\t\t\t\t\r\n                       \t\t\t\t\t\t<bz-input label=\"Nome Tipo Ordine:\" formControlName=\"nomeTipoOrdine\" type=\"string\" >\r\n                       \t                        <bz-error> L'Nome Tipo Ordine   {{ 'label.obligatoryValues' | translate }}  </bz-error>\r\n                       \t                    </bz-input>\r\n                       \t\r\n                       \t                </div>\r\n                       \t            </div>\r\n                       \r\n        \r\n\t        </ng-container>\r\n\t\r\n\t        <div *ngIf=\"pageStatus | hasPageStatus: 'view'\">\r\n\t\r\n\t\t\t\t<!-- Id Tipo Ordine -->\r\n\t\t\t\t  <label \tbzTooltip=\"Identificativo\"  > Id Tipo Ordine: </label>\r\n\t            <div class=\"fk-row inputs\">\r\n\t                <div class=\"fk-col-8\"><strong>{{ tipoOrdine?.idTipoOrdine  }}</strong></div>\r\n\t            </div>\r\n\t\t\t\t\r\n\t\t\t\t<!-- Nome Tipo Ordine -->\r\n\t\t\t\t  <label \tbzTooltip=\"Nome tipo Ordine\"  > Nome Tipo Ordine: </label>\r\n\t            <div class=\"fk-row inputs\">\r\n\t                <div class=\"fk-col-8\"><strong>{{ tipoOrdine?.nomeTipoOrdine  }}</strong></div>\r\n\t            </div>\r\n\t\t\t\t\r\n\t\r\n             </div>\r\n\t\r\n\t        \r\n\t        <!--Tabs tipo-ordine -->\r\n\t        <app-tabs-tipo-ordine [formGroup]=\"tipoOrdineForm\" [entity]=\"tipoOrdine\" [pageStatus]=\"tabPageStatus\"></app-tabs-tipo-ordine>\r\n\r\n\t\t</bz-card-content>\r\n\r\n    </bz-card>\r\n\r\n    <!-- Buttons -->\r\n    <bz-card class=\"card\">\r\n\t\t<bz-card-content>\t\r\n\t        <button bzButton status=\"primary\" type=\"button\" (click)=\"buttonsService.goBack()\"> {{ 'buttons.goBack' | translate }} </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: 'new') && (Privileges?.TIPO_ORDINE_CREATE | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"insertTipoOrdine()\" [bzCheckForm]=\"tipoOrdineForm\"> {{ 'buttons.save' | translate }}  </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: 'view') && (Privileges?.TIPO_ORDINE_FIND_BY_ID | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"editTipoOrdine()\" type=\"button\"> {{ 'buttons.edit' | translate }}  </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: 'edit') && (Privileges?.TIPO_ORDINE_UPDATE | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"updateTipoOrdine()\" [bzCheckForm]=\"tipoOrdineForm\"> {{ 'buttons.save' | translate }}  </button>\r\n\t        <button *ngIf=\"(pageStatus | hasPageStatus: ['edit','view']) && (Privileges?.TIPO_ORDINE_DELETE | hasPermission: privileges)\" bzButton status=\"primary\" class=\"button\"\r\n\t            (bzClick)=\"confirmDeleteTipoOrdine()\" > {{ 'buttons.delete' | translate }}  </button>\r\n\t\t\t\r\n\t\t</bz-card-content>\t\r\n    </bz-card>\r\n\r\n</form>\r\n\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}