{"version":3,"sources":["./src/app/utilities/services/route.service.ts","./src/app/pages/voila2sample-ms-demo-fe/ordine/ordine-api.service.ts","./src/app/utilities/pipe/utility-pipe.module.ts","./src/app/shared/base/base-api.service.ts","./src/moc/ordine/ordine-mock.service.ts","./src/app/utilities/pipe/utility-pipe.ts","./src/app/utilities/services/buttons.service.ts","./src/app/utilities/dialog/confirm-dialog.service.ts","./src/app/utilities/services/overlays.service.ts"],"names":[],"mappings":"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","file":"default~cliente-cliente-module~ordine-ordine-module~prodotto-prodotto-module~riga-ordine-riga-ordine~9422228b.js","sourcesContent":["import { Injectable, Injector } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Location } from '@angular/common';\r\n\r\n@Injectable() \r\nexport class RouteService {\r\n\r\n    private routerService !: Router;\r\n    private routeService !: ActivatedRoute;\r\n    private locationService !: Location\r\n\r\n    constructor(private injector: Injector){}\r\n   \r\n    get router() : Router{\r\n        if(!this.routerService)\r\n           this.routerService = this.injector.get(Router);\r\n        return this.routerService;\r\n    }\r\n\r\n    get route() :  ActivatedRoute {\r\n        if(!this.routeService)\r\n          this.routeService = this.injector.get(ActivatedRoute);\r\n        return this.routeService;\r\n    }\r\n\r\n    get location() : Location {\r\n        if(!this.locationService)\r\n          this.locationService = this.injector.get(Location);\r\n        return this.locationService;\r\n    }\r\n}\r\n","\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { DateService } from \"blazing\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BaseApiService } from \"../../../shared/base/base-api.service\";\r\nimport { ApiListResponse, ApiResponse } from \"voila2-runtime-ng\";\r\nimport { IOrdine, IOrdineDto } from \"./ordine.interface\";\r\nimport { OrdineMockService } from \"src/moc/ordine/ordine-mock.service\";\r\n\r\n\r\n@Injectable()\r\nexport class OrdineApiService extends BaseApiService<IOrdine, IOrdineDto>{\r\n\r\n\r\n  private url: string = \"demo/ordine\";\r\n  \r\n\r\n  constructor(httpClient: HttpClient, dateService: DateService, private ordineMock: OrdineMockService) { super(httpClient, dateService) }\r\n\r\n  public getOrdineByCriteria(options?: HttpParams): Observable<ApiListResponse<IOrdine,IOrdineDto>> {\r\n    return this.getEntityListByCriteria(this.url, options);\r\n  }\r\n\r\n  public addOrdine(ordine: IOrdine) : Observable<ApiResponse<IOrdine>> {\r\n    const fixedOrdine: IOrdine = this.stringifyDate(ordine, 'dataOrdine');\r\n    return this.addEntityInstance(fixedOrdine, this.url);\r\n  }\r\n\r\n  public getOrdineById(id: string) : Observable<ApiResponse<IOrdine>> {\r\n    return this.ordineMock.getOrdine().pipe(\r\n      map( (ordineResult: ApiResponse<IOrdine>) => {return this.convertIntoDate(ordineResult,'dataOrdine')}))\r\n  }\r\n\r\n  public updateOrdine(ordine: IOrdine) : Observable<ApiResponse<IOrdine>> {\r\n    const fixedOrdine: IOrdine = this.stringifyDate(ordine, 'dataOrdine');\r\n    return this.updateEntityInstance(fixedOrdine, this.url);\r\n  }\r\n\r\n  public deleteOrdine(id: string) : Observable<ApiResponse<IOrdine>> {\r\n    return this.deleteEntityInstance(id,this.url);\r\n  }\r\n\r\n\r\n  public getListOrdineByLink(link: string, options?: HttpParams): Observable<any> {\r\n    return this.getEntityListByLink(link, options );\r\n  }\r\n\r\n  public printPdfReport(id: string): any {\r\n        window.open(this.baseUrl + \"/\" + this.url + '/pdf/' + id);\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { NgModule } from \"@angular/core\";\r\nimport {PageStatusPipe, PermissionPipe, ReadOnlyPipe} from './utility-pipe';\r\n\r\n\r\nconst PIPE = [\r\n    PageStatusPipe,\r\n    PermissionPipe,\r\n    ReadOnlyPipe\r\n]\r\n\r\n@NgModule({\r\n    declarations: [...PIPE],\r\n    imports: [\r\n    ],\r\n    exports:[...PIPE]\r\n  })\r\n  export class UtilityPipeModule { }\r\n  ","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { DateService } from \"blazing\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ApiListResponse, ApiRequest, ApiResponse } from \"voila2-runtime-ng\";\r\n\r\n\r\n\r\n@Injectable(\r\n  {providedIn: 'root'}\r\n)\r\nexport class BaseApiService<T, V> {\r\n\r\n  public baseUrl: string = environment.baseUrl;\r\n \r\n\r\n  constructor(protected httpClient: HttpClient, private dateService: DateService) { }\r\n\r\n  protected getEntityListByCriteria( url: string, options?: HttpParams,): Observable<ApiListResponse<T,V>> {\r\n    return this.httpClient.get<any>(this.baseUrl + '/' +url, { params: options });\r\n  }\r\n\r\n  protected addEntityInstance(entity: T, url: string): Observable<ApiResponse<T>> {\r\n    return this.httpClient.post<ApiResponse<T>>(this.baseUrl + '/' + url, this.wrapInApiRequest(entity));\r\n  }\r\n\r\n  protected getEntityInstanceById(id: string, url: string): Observable<ApiResponse<T>>  {\r\n    return this.httpClient.get<ApiResponse<T>>(this.baseUrl + '/' + url + '/' + id);\r\n  }\r\n\r\n  protected updateEntityInstance(entity: T, url: string): Observable<ApiResponse<T>> {\r\n    return this.httpClient.put<ApiResponse<T>>(this.baseUrl + '/' + url, this.wrapInApiRequest(entity));\r\n  }\r\n\r\n  protected deleteEntityInstance(id: string, url: string): Observable<ApiResponse<T>> {\r\n    return this.httpClient.delete<ApiResponse<T>>(this.baseUrl + '/' + url + '/' + id);\r\n  }\r\n\r\n  public getEntityListByLink(link: string, options?: HttpParams): Observable<ApiListResponse<T,V>> {\r\n    return this.httpClient.get<any>(link, { params: options });\r\n  }\r\n\r\n\r\n  protected convertIntoDate(result: any, property: string): any  {\r\n    return this.dateService.convertIntoDate(result, property);\r\n  }\r\n\r\n  protected stringifyDate(entity: any, property: string) : any {\r\n   return this.dateService.stringifyDate(entity, property);\r\n  }\r\n\r\n  private wrapInApiRequest(entity: T) : ApiRequest<T> {\r\n     return {data: entity};\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { of as observableOf, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({providedIn:\"root\"})\r\nexport class OrdineMockService {\r\n\r\n   getOrdineList(): Observable<any[]> {\r\n        return observableOf(ORDINI);\r\n   }\r\n\r\n   getOrdine(): Observable<any> {\r\n       return observableOf(ORDINE);\r\n   }\r\n\r\n}\r\n\r\n\r\nexport const ORDINI : any[] = [\r\n    {\r\n        \"messages\":[\r\n           \r\n        ],\r\n        \"response\":{\r\n           \"_embedded\":{\r\n              \"ordineDtoList\":[\r\n                 {\r\n                    \"objectKey\":\"1~2020\",\r\n                    \"objectTitle\":\"1~2020\",\r\n                    \"idOrdine\":1,\r\n                    \"anno\":2020,\r\n                    \"dataOrdine\":\"2020-12-13\",\r\n                    \"urgente\":true,\r\n                    \"ragioneSociale\":\"dottore\",\r\n                    \"idTipoOrdine\":null,\r\n                    \"theClienteObjectTitle\":\"dottore\",\r\n                    \"theClienteObjectKey\":\"dottore\",\r\n                    \"theTipoOrdineObjectTitle\":null,\r\n                    \"theTipoOrdineObjectKey\":null,\r\n                    \"theOrdinePadreObjectTitle\":null,\r\n                    \"theOrdinePadreObjectKey\":null,\r\n                    \"ordineKey\":{\r\n                       \"entityState\":\"\",\r\n                       \"idOrdine\":1,\r\n                       \"anno\":2020,\r\n                       \"updatedEntityState\":false,\r\n                       \"createdEntityState\":false,\r\n                       \"deletedEntityState\":false\r\n                    },\r\n                    \"_links\":{\r\n                       \"self\":[\r\n                          {\r\n                             \"href\":\"http://localhost:8090/demo/ordine/1~2020\"\r\n                          },\r\n                          {\r\n                             \"href\":\"http://localhost:8090/demo/ordine/1~2020\"\r\n                          }\r\n                       ],\r\n                       \"theCliente\":{\r\n                          \"href\":\"http://localhost:8090/demo/cliente/dottore\"\r\n                       },\r\n                       \"theRigaOrdine\":{\r\n                          \"href\":\"http://localhost:8090/demo/riga-ordine/findByTheOrdine/1~2020\"\r\n                       },\r\n                       \"theOrdineFigli\":{\r\n                          \"href\":\"http://localhost:8090/demo/ordine/findByTheOrdinePadre/1~2020\"\r\n                       }\r\n                    }\r\n                 }\r\n              ]\r\n           },\r\n           \"_links\":{\r\n              \"self\":{\r\n                 \"href\":\"http://127.0.0.1:8014/demo/ordine?page=0&size=20\"\r\n              }\r\n           },\r\n           \"page\":{\r\n              \"size\":20,\r\n              \"totalElements\":1,\r\n              \"totalPages\":1,\r\n              \"number\":0\r\n           }\r\n        },\r\n        \"errorDetails\":null\r\n     }\r\n]\r\n\r\n\r\nexport const ORDINE = \r\n   {\r\n      \"messages\":[\r\n         \r\n      ],\r\n      \"response\":{\r\n         \"objectKey\":\"1~2020\",\r\n         \"objectTitle\":\"1~2020\",\r\n         \"idOrdine\":1,\r\n         \"anno\":2020,\r\n         \"dataOrdine\":\"2020-12-13\",\r\n         \"urgente\":true,\r\n         \"ragioneSociale\":\"dottore\",\r\n         \"idTipoOrdine\":null,\r\n         \"theClienteObjectTitle\":\"dottore\",\r\n         \"theClienteObjectKey\":\"dottore\",\r\n         \"theTipoOrdineObjectTitle\":null,\r\n         \"theTipoOrdineObjectKey\":null,\r\n         \"theOrdinePadreObjectTitle\":null,\r\n         \"theOrdinePadreObjectKey\":null,\r\n         \"ordineKey\":{\r\n            \"entityState\":\"\",\r\n            \"idOrdine\":1,\r\n            \"anno\":2020,\r\n            \"updatedEntityState\":false,\r\n            \"createdEntityState\":false,\r\n            \"deletedEntityState\":false\r\n         },\r\n         \"_links\":{\r\n            \"self\":[\r\n               {\r\n                  \"href\":\"http://localhost:8090/demo/ordine/1~2020\"\r\n               },\r\n               {\r\n                  \"href\":\"http://localhost:8090/demo/ordine/1~2020\"\r\n               }\r\n            ],\r\n            \"theCliente\":{\r\n               \"href\":\"http://localhost:8090/demo/cliente/dottore\"\r\n            },\r\n            \"theRigaOrdine\":{\r\n               \"href\":\"http://localhost:8090/demo/riga-ordine/findByTheOrdine/1~2020\"\r\n            },\r\n            \"theOrdineFigli\":{\r\n               \"href\":\"http://localhost:8090/demo/ordine/findByTheOrdinePadre/1~2020\"\r\n            }\r\n         }\r\n      },\r\n      \"errorDetails\":null\r\n}","import {  Pipe,  } from \"@angular/core\";\r\nimport { IsEqualPipe, isEquals } from \"blazing\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { PageStatus } from \"voila2-runtime-ng\";\r\n\r\n@Pipe({\r\n\r\n    name: 'hasPageStatus'\r\n})\r\nexport class PageStatusPipe extends IsEqualPipe {\r\n}\r\n\r\n@Pipe({\r\n    name: 'hasPermission'\r\n})\r\nexport class PermissionPipe  {\r\n\r\n    public transform(element: any, expectedElementList: any[] | any): boolean {\r\n        if(environment.securityOn)\r\n           return isEquals(element, expectedElementList);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n@Pipe({\r\n    name: 'isReadOnly'\r\n})\r\nexport class ReadOnlyPipe  {\r\n\r\n    public transform(pageSatus: string, isReadOnly: boolean): boolean {\r\n         if(isEquals(pageSatus, PageStatus.NEW) && isReadOnly) \r\n             return false;\r\n         return true;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport {Location} from '@angular/common';\r\n\r\n@Injectable()\r\nexport class ButtonService {\r\n\r\n    constructor(private location: Location){}\r\n\r\n    public goBack() : void {\r\n        this.location.back();\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { BzDialogService } from 'blazing';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n\r\n  constructor(private dialogService: BzDialogService) {}\r\n\r\n\r\n   public openConfirmDialog( message: string, title ?:string, icon ?: string) : Observable<any> {\r\n        const prop = { \r\n              message: message,\r\n              title: title || 'Attenzione',\r\n              icon: icon || 'fa fa-exclamation-triangle'\r\n        }\r\n        return this.dialogService.showDialog(ConfirmDialogComponent, {properties: prop})\r\n   }\r\n\r\n}\r\n","import { Injectable, Injector} from \"@angular/core\";\r\nimport { BzDialogService } from \"blazing\";\r\nimport { ConfirmDialogService } from \"../dialog/confirm-dialog.service\";\r\nimport { ToastrService } from \"./toastr.service\";\r\n\r\n@Injectable() \r\nexport class OverlaysService {\r\n\r\n    private toastService !: ToastrService;\r\n    private dialogService !: BzDialogService;\r\n    private confirmDialogService !: ConfirmDialogService\r\n\r\n    constructor(private injector: Injector){}\r\n   \r\n    get toast() : ToastrService {\r\n        if(!this.toastService)\r\n           this.toastService = this.injector.get(ToastrService);\r\n        return this.toastService;\r\n    }\r\n\r\n    get dialog() : BzDialogService {\r\n        if(!this.dialogService)\r\n          this.dialogService = this.injector.get(BzDialogService);\r\n        return this.dialogService;\r\n    }\r\n\r\n    get confirmDialog() : ConfirmDialogService {\r\n        if(!this.confirmDialogService)\r\n          this.confirmDialogService = this.injector.get(ConfirmDialogService);\r\n        return this.confirmDialogService;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}